#include <gtest/gtest.h>
#include <ATen/native/special_functions/chebyshev_polynomial_t.h>

template<typename T1>
struct chebyshev_polynomial_t_fixture {
  T1 f0;
  unsigned int n;
  T1 x;
  T1 f;
};

const chebyshev_polynomial_t_fixture<double> fixture_0001[21] = {
    {1.0000000000000000, 0, -1.0000000000000000, 0.0},
    {1.0000000000000000, 0, -0.90000000000000002, 0.0},
    {1.0000000000000000, 0, -0.80000000000000004, 0.0},
    {1.0000000000000000, 0, -0.69999999999999996, 0.0},
    {1.0000000000000000, 0, -0.59999999999999998, 0.0},
    {1.0000000000000000, 0, -0.50000000000000000, 0.0},
    {1.0000000000000000, 0, -0.39999999999999991, 0.0},
    {1.0000000000000000, 0, -0.29999999999999993, 0.0},
    {1.0000000000000000, 0, -0.19999999999999996, 0.0},
    {1.0000000000000000, 0, -0.099999999999999978, 0.0},
    {1.0000000000000000, 0, 0.0000000000000000, 0.0},
    {1.0000000000000000, 0, 0.10000000000000009, 0.0},
    {1.0000000000000000, 0, 0.20000000000000018, 0.0},
    {1.0000000000000000, 0, 0.30000000000000004, 0.0},
    {1.0000000000000000, 0, 0.40000000000000013, 0.0},
    {1.0000000000000000, 0, 0.50000000000000000, 0.0},
    {1.0000000000000000, 0, 0.60000000000000009, 0.0},
    {1.0000000000000000, 0, 0.70000000000000018, 0.0},
    {1.0000000000000000, 0, 0.80000000000000004, 0.0},
    {1.0000000000000000, 0, 0.90000000000000013, 0.0},
    {1.0000000000000000, 0, 1.0000000000000000, 0.0},
};

const double tolerance_0001 = 2.5000000000000020e-13;

const chebyshev_polynomial_t_fixture<double> fixture_0002[21] = {
    {-1.0000000000000000, 1, -1.0000000000000000, 0.0},
    {-0.90000000000000002, 1, -0.90000000000000002, 0.0},
    {-0.80000000000000004, 1, -0.80000000000000004, 0.0},
    {-0.69999999999999984, 1, -0.69999999999999996, 0.0},
    {-0.59999999999999987, 1, -0.59999999999999998, 0.0},
    {-0.50000000000000022, 1, -0.50000000000000000, 0.0},
    {-0.39999999999999997, 1, -0.39999999999999991, 0.0},
    {-0.29999999999999999, 1, -0.29999999999999993, 0.0},
    {-0.20000000000000004, 1, -0.19999999999999996, 0.0},
    {-0.099999999999999881, 1, -0.099999999999999978, 0.0},
    {6.1232339957367660e-17, 1, 0.0000000000000000, 0.0},
    {0.10000000000000001, 1, 0.10000000000000009, 0.0},
    {0.20000000000000015, 1, 0.20000000000000018, 0.0},
    {0.30000000000000010, 1, 0.30000000000000004, 0.0},
    {0.40000000000000008, 1, 0.40000000000000013, 0.0},
    {0.49999999999999989, 1, 0.50000000000000000, 0.0},
    {0.60000000000000009, 1, 0.60000000000000009, 0.0},
    {0.70000000000000018, 1, 0.70000000000000018, 0.0},
    {0.80000000000000004, 1, 0.80000000000000004, 0.0},
    {0.90000000000000013, 1, 0.90000000000000013, 0.0},
    {1.0000000000000000, 1, 1.0000000000000000, 0.0},
};

const double tolerance_0002 = 2.5000000000000020e-13;

const chebyshev_polynomial_t_fixture<double> fixture_0003[21] = {
    {-1.0000000000000000, 5, -1.0000000000000000, 0.0},
    {0.63216000000000050, 5, -0.90000000000000002, 0.0},
    {0.99712000000000001, 5, -0.80000000000000004, 0.0},
    {0.67087999999999870, 5, -0.69999999999999996, 0.0},
    {0.075839999999999061, 5, -0.59999999999999998, 0.0},
    {-0.49999999999999828, 5, -0.50000000000000000, 0.0},
    {-0.88384000000000018, 5, -0.39999999999999991, 0.0},
    {-0.99887999999999999, 5, -0.29999999999999993, 0.0},
    {-0.84512000000000009, 5, -0.19999999999999996, 0.0},
    {-0.48015999999999948, 5, -0.099999999999999978, 0.0},
    {3.0616169978683831e-16, 5, 0.0000000000000000, 0.0},
    {0.48016000000000003, 5, 0.10000000000000009, 0.0},
    {0.84512000000000043, 5, 0.20000000000000018, 0.0},
    {0.99887999999999999, 5, 0.30000000000000004, 0.0},
    {0.88383999999999985, 5, 0.40000000000000013, 0.0},
    {0.50000000000000089, 5, 0.50000000000000000, 0.0},
    {-0.075840000000000560, 5, 0.60000000000000009, 0.0},
    {-0.67088000000000114, 5, 0.70000000000000018, 0.0},
    {-0.99712000000000001, 5, 0.80000000000000004, 0.0},
    {-0.63215999999999872, 5, 0.90000000000000013, 0.0},
    {1.0000000000000000, 5, 1.0000000000000000, 0.0},
};

const double tolerance_0003 = 1.0000000000000008e-12;

const chebyshev_polynomial_t_fixture<double> fixture_0004[21] = {
    {1.0000000000000000, 8, -1.0000000000000000, 0.0},
    {-0.89309311999999985, 8, -0.90000000000000002, 0.0},
    {0.42197247999999998, 8, -0.80000000000000004, 0.0},
    {0.99680127999999979, 8, -0.69999999999999996, 0.0},
    {0.42197247999999865, 8, -0.59999999999999998, 0.0},
    {-0.49999999999999850, 8, -0.50000000000000000, 0.0},
    {-0.98868992000000000, 8, -0.39999999999999991, 0.0},
    {-0.76222592000000000, 8, -0.29999999999999993, 0.0},
    {-0.040056320000000215, 8, -0.19999999999999996, 0.0},
    {0.69574528000000069, 8, -0.099999999999999978, 0.0},
    {1.0000000000000000, 8, 0.0000000000000000, 0.0},
    {0.69574527999999991, 8, 0.10000000000000009, 0.0},
    {-0.040056320000001193, 8, 0.20000000000000018, 0.0},
    {-0.76222592000000067, 8, 0.30000000000000004, 0.0},
    {-0.98868991999999989, 8, 0.40000000000000013, 0.0},
    {-0.50000000000000078, 8, 0.50000000000000000, 0.0},
    {0.42197248000000115, 8, 0.60000000000000009, 0.0},
    {0.99680128000000023, 8, 0.70000000000000018, 0.0},
    {0.42197247999999909, 8, 0.80000000000000004, 0.0},
    {-0.89309312000000107, 8, 0.90000000000000013, 0.0},
    {1.0000000000000000, 8, 1.0000000000000000, 0.0},
};

const double tolerance_0004 = 1.0000000000000008e-12;

const chebyshev_polynomial_t_fixture<double> fixture_0005[21] = {
    {1.0000000000000000, 10, -1.0000000000000000, 0.0},
    {-0.20074746879999864, 10, -0.90000000000000002, 0.0},
    {0.98849658880000002, 10, -0.80000000000000004, 0.0},
    {-0.099840051200003554, 10, -0.69999999999999996, 0.0},
    {-0.98849658880000024, 10, -0.59999999999999998, 0.0},
    {-0.50000000000000344, 10, -0.50000000000000000, 0.0},
    {0.56234629120000057, 10, -0.39999999999999991, 0.0},
    {0.99552250880000004, 10, -0.29999999999999993, 0.0},
    {0.42845562880000027, 10, -0.19999999999999996, 0.0},
    {-0.53889274880000093, 10, -0.099999999999999978, 0.0},
    {-1.0000000000000000, 10, 0.0000000000000000, 0.0},
    {-0.53889274879999993, 10, 0.10000000000000009, 0.0},
    {0.42845562880000138, 10, 0.20000000000000018, 0.0},
    {0.99552250880000015, 10, 0.30000000000000004, 0.0},
    {0.56234629119999946, 10, 0.40000000000000013, 0.0},
    {-0.49999999999999828, 10, 0.50000000000000000, 0.0},
    {-0.98849658879999980, 10, 0.60000000000000009, 0.0},
    {-0.099840051199997032, 10, 0.70000000000000018, 0.0},
    {0.98849658880000024, 10, 0.80000000000000004, 0.0},
    {-0.20074746880000330, 10, 0.90000000000000013, 0.0},
    {1.0000000000000000, 10, 1.0000000000000000, 0.0},
};

const double tolerance_0005 = 2.5000000000000015e-12;

const chebyshev_polynomial_t_fixture<double> fixture_0006[21] = {
    {1.0000000000000000, 20, -1.0000000000000000, 0.0},
    {-0.91940090754078718, 20, -0.90000000000000002, 0.0},
    {0.95425101213847263, 20, -0.80000000000000004, 0.0},
    {-0.98006392835276135, 20, -0.69999999999999996, 0.0},
    {0.95425101213847374, 20, -0.59999999999999998, 0.0},
    {-0.49999999999999323, 20, -0.50000000000000000, 0.0},
    {-0.36753329754720843, 20, -0.39999999999999991, 0.0},
    {0.98213013105489222, 20, -0.29999999999999993, 0.0},
    {-0.63285154829919277, 20, -0.19999999999999996, 0.0},
    {-0.41918921058155811, 20, -0.099999999999999978, 0.0},
    {1.0000000000000000, 20, 0.0000000000000000, 0.0},
    {-0.41918921058156039, 20, 0.10000000000000009, 0.0},
    {-0.63285154829919088, 20, 0.20000000000000018, 0.0},
    {0.98213013105489266, 20, 0.30000000000000004, 0.0},
    {-0.36753329754721070, 20, 0.40000000000000013, 0.0},
    {-0.50000000000000344, 20, 0.50000000000000000, 0.0},
    {0.95425101213847185, 20, 0.60000000000000009, 0.0},
    {-0.98006392835276390, 20, 0.70000000000000018, 0.0},
    {0.95425101213847330, 20, 0.80000000000000004, 0.0},
    {-0.91940090754078341, 20, 0.90000000000000013, 0.0},
    {1.0000000000000000, 20, 1.0000000000000000, 0.0},
};

const double tolerance_0006 = 1.0000000000000008e-12;

const chebyshev_polynomial_t_fixture<double> fixture_0007[21] = {
    {1.0000000000000000, 40, -1.0000000000000000, 0.0},
    {0.69059605757364606, 40, -0.90000000000000002, 0.0},
    {0.82118998833459877, 40, -0.80000000000000004, 0.0},
    {0.92105060731649302, 40, -0.69999999999999996, 0.0},
    {0.82118998833460299, 40, -0.59999999999999998, 0.0},
    {-0.50000000000001354, 40, -0.50000000000000000, 0.0},
    {-0.72983855038815026, 40, -0.39999999999999991, 0.0},
    {0.92915918865179947, 40, -0.29999999999999993, 0.0},
    {-0.19899783563062889, 40, -0.19999999999999996, 0.0},
    {-0.64856081146402023, 40, -0.099999999999999978, 0.0},
    {1.0000000000000000, 40, 0.0000000000000000, 0.0},
    {-0.64856081146401645, 40, 0.10000000000000009, 0.0},
    {-0.19899783563063370, 40, 0.20000000000000018, 0.0},
    {0.92915918865180125, 40, 0.30000000000000004, 0.0},
    {-0.72983855038814693, 40, 0.40000000000000013, 0.0},
    {-0.49999999999999323, 40, 0.50000000000000000, 0.0},
    {0.82118998833459611, 40, 0.60000000000000009, 0.0},
    {0.92105060731650323, 40, 0.70000000000000018, 0.0},
    {0.82118998833460155, 40, 0.80000000000000004, 0.0},
    {0.69059605757363229, 40, 0.90000000000000013, 0.0},
    {1.0000000000000000, 40, 1.0000000000000000, 0.0},
};

const double tolerance_0007 = 2.5000000000000015e-12;

const chebyshev_polynomial_t_fixture<double> fixture_0008[21] = {
    {1.0000000000000000, 100, -1.0000000000000000, 0.0},
    {0.43533674915333020, 100, -0.90000000000000002, 0.0},
    {0.052514352287148618, 100, -0.80000000000000004, 0.0},
    {-0.54024619650135441, 100, -0.69999999999999996, 0.0},
    {0.052514352287174056, 100, -0.59999999999999998, 0.0},
    {-0.50000000000000933, 100, -0.50000000000000000, 0.0},
    {-0.95203412147527156, 100, -0.39999999999999991, 0.0},
    {0.58439572719378818, 100, -0.29999999999999993, 0.0},
    {0.28073533545790169, 100, -0.19999999999999996, 0.0},
    {-0.82984629745760197, 100, -0.099999999999999978, 0.0},
    {1.0000000000000000, 100, 0.0000000000000000, 0.0},
    {-0.82984629745758720, 100, 0.10000000000000009, 0.0},
    {0.28073533545787627, 100, 0.20000000000000018, 0.0},
    {0.58439572719378663, 100, 0.30000000000000004, 0.0},
    {-0.95203412147526789, 100, 0.40000000000000013, 0.0},
    {-0.49999999999999534, 100, 0.50000000000000000, 0.0},
    {0.052514352287133449, 100, 0.60000000000000009, 0.0},
    {-0.54024619650138872, 100, 0.70000000000000018, 0.0},
    {0.052514352287160851, 100, 0.80000000000000004, 0.0},
    {0.43533674915335402, 100, 0.90000000000000013, 0.0},
    {1.0000000000000000, 100, 1.0000000000000000, 0.0},
};

const double tolerance_0008 = 2.5000000000000014e-11;

template<typename T1, unsigned int T2>
void
test(const chebyshev_polynomial_t_fixture<T1>(&fixtures)[T2], T1 tolerance) {
  const T1 epsilon = std::numeric_limits<T1>::epsilon();

  T1 maximum_absolute_difference = T1(-1);
  T1 maximum_absolute_fraction = T1(-1);

  auto error = 0;

  for (auto fixture: fixtures) {
    const T1 g = aten::native::special_functions::chebyshev_polynomial_t(fixture.n, fixture.x);

    if (std::isnan(g) && !error) {
      error = 1;
    }

    if (!std::isnan(g)) {
      const T1 f = fixture.f0;

      const auto difference = g - f;

      const auto absolute_difference = std::abs(difference);

      if (absolute_difference > maximum_absolute_difference) {
        maximum_absolute_difference = absolute_difference;
      }

      const auto abs_f = std::abs(f);
      const auto abs_g = std::abs(g);

      if (abs_f > T1(10) * epsilon && abs_g > T1(10) * epsilon) {
        const auto fraction = difference / f;

        const auto absolute_fraction = std::abs(fraction);

        if (absolute_fraction > maximum_absolute_fraction) {
          maximum_absolute_fraction = absolute_fraction;
        }
      }
    }
  }

  EXPECT_TRUE(!error && maximum_absolute_fraction < tolerance);
}

TEST(ChebyshevPolynomialTTest, GSL) {
  test(fixture_0001, tolerance_0001);
  test(fixture_0002, tolerance_0002);
  test(fixture_0003, tolerance_0003);
  test(fixture_0004, tolerance_0004);
  test(fixture_0005, tolerance_0005);
  test(fixture_0006, tolerance_0006);
  test(fixture_0007, tolerance_0007);
  test(fixture_0008, tolerance_0008);
}
