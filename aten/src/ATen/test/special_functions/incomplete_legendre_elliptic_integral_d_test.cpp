#include <gtest/gtest.h>
#include <ATen/native/special_functions/incomplete_legendre_elliptic_integral_d.h>

template<typename T1>
struct incomplete_legendre_elliptic_integral_d_fixture {
  T1 f0;
  T1 k;
  T1 phi;
  T1 f;
};

const incomplete_legendre_elliptic_integral_d_fixture<double> fixture_0001[10] = {
    {0.0000000000000000, -0.90000000000000002, 0.0000000000000000, 0.0},
    {0.0017745280240378219, -0.90000000000000002, 0.17453292519943295, 0.0},
    {0.014253646966980111, -0.90000000000000002, 0.34906585039886590, 0.0},
    {0.048443861188898651, -0.90000000000000002, 0.52359877559829882, 0.0},
    {0.11601724174276445, -0.90000000000000002, 0.69813170079773179, 0.0},
    {0.22974037076619516, -0.90000000000000002, 0.87266462599716477, 0.0},
    {0.40369054220887640, -0.90000000000000002, 1.0471975511965976, 0.0},
    {0.65186331684678844, -0.90000000000000002, 1.2217304763960306, 0.0},
    {0.98059172649148818, -0.90000000000000002, 1.3962634015954636, 0.0},
    {1.3689531921495752, -0.90000000000000002, 1.5707963267948966, 0.0},
};

const double tolerance_0001 = 2.5000000000000020e-13;

const incomplete_legendre_elliptic_integral_d_fixture<double> fixture_0002[10] = {
    {0.0000000000000000, -0.80000000000000004, 0.0000000000000000, 0.0},
    {0.0017717494813139778, -0.80000000000000004, 0.17453292519943295, 0.0},
    {0.014162243950157404, -0.80000000000000004, 0.34906585039886590, 0.0},
    {0.047716886790345484, -0.80000000000000004, 0.52359877559829882, 0.0},
    {0.11274858576397100, -0.80000000000000004, 0.69813170079773179, 0.0},
    {0.21891560249849629, -0.80000000000000004, 0.87266462599716477, 0.0},
    {0.37413671220917655, -0.80000000000000004, 1.0471975511965976, 0.0},
    {0.58211790179390199, -0.80000000000000004, 1.2217304763960306, 0.0},
    {0.83791373072958042, -0.80000000000000004, 1.3962634015954636, 0.0},
    {1.1233638038981608, -0.80000000000000004, 1.5707963267948966, 0.0},
};

const double tolerance_0002 = 2.5000000000000020e-13;

const incomplete_legendre_elliptic_integral_d_fixture<double> fixture_0003[10] = {
    {0.0000000000000000, -0.69999999999999996, 0.0000000000000000, 0.0},
    {0.0017693106982486103, -0.69999999999999996, 0.17453292519943295, 0.0},
    {0.014083315304350336, -0.69999999999999996, 0.34906585039886590, 0.0},
    {0.047107032299642318, -0.69999999999999996, 0.52359877559829882, 0.0},
    {0.11012537863030469, -0.69999999999999996, 0.69813170079773179, 0.0},
    {0.21076252483177441, -0.69999999999999996, 0.87266462599716477, 0.0},
    {0.35371759117306861, -0.69999999999999996, 1.0471975511965976, 0.0},
    {0.53889336168256530, -0.69999999999999996, 1.2217304763960306, 0.0},
    {0.75928710176862158, -0.69999999999999996, 1.3962634015954636, 0.0},
    {1.0000670669444245, -0.69999999999999996, 1.5707963267948966, 0.0},
};

const double tolerance_0003 = 2.5000000000000020e-13;

const incomplete_legendre_elliptic_integral_d_fixture<double> fixture_0004[10] = {
    {0.0000000000000000, -0.59999999999999998, 0.0000000000000000, 0.0},
    {0.0017672067608119602, -0.59999999999999998, 0.17453292519943295, 0.0},
    {0.014016168843617425, -0.59999999999999998, 0.34906585039886590, 0.0},
    {0.046600501111499895, -0.59999999999999998, 0.52359877559829882, 0.0},
    {0.10802094630646218, -0.59999999999999998, 0.69813170079773179, 0.0},
    {0.20451502360683604, -0.59999999999999998, 0.87266462599716477, 0.0},
    {0.33892147050821841, -0.59999999999999998, 1.0471975511965976, 0.0},
    {0.50943964442941936, -0.59999999999999998, 1.2217304763960306, 0.0},
    {0.70872353673353261, -0.59999999999999998, 1.3962634015954636, 0.0},
    {0.92408446796396737, -0.59999999999999998, 1.5707963267948966, 0.0},
};

const double tolerance_0004 = 2.5000000000000020e-13;

const incomplete_legendre_elliptic_integral_d_fixture<double> fixture_0005[10] = {
    {0.0000000000000000, -0.50000000000000000, 0.0000000000000000, 0.0},
    {0.0017654334687950237, -0.50000000000000000, 0.17453292519943295, 0.0},
    {0.013960237293231186, -0.50000000000000000, 0.34906585039886590, 0.0},
    {0.046186768767871089, -0.50000000000000000, 0.52359877559829882, 0.0},
    {0.10634818433863136, -0.50000000000000000, 0.69813170079773179, 0.0},
    {0.19971443163522265, -0.50000000000000000, 0.87266462599716477, 0.0},
    {0.32798045962965344, -0.50000000000000000, 1.0471975511965976, 0.0},
    {0.48849490325825223, -0.50000000000000000, 1.2217304763960306, 0.0},
    {0.67398458871077627, -0.50000000000000000, 1.3962634015954636, 0.0},
    {0.87315258189267553, -0.50000000000000000, 1.5707963267948966, 0.0},
};

const double tolerance_0005 = 2.5000000000000020e-13;

const incomplete_legendre_elliptic_integral_d_fixture<double> fixture_0006[10] = {
    {0.0000000000000000, -0.39999999999999991, 0.0000000000000000, 0.0},
    {0.0017639873100163696, -0.39999999999999991, 0.17453292519943295, 0.0},
    {0.013915062836514525, -0.39999999999999991, 0.34906585039886590, 0.0},
    {0.045857827106517292, -0.39999999999999991, 0.52359877559829882, 0.0},
    {0.10504599643185691, -0.39999999999999991, 0.69813170079773179, 0.0},
    {0.19607010235413286, -0.39999999999999991, 0.87266462599716477, 0.0},
    {0.31989685162149178, -0.39999999999999991, 1.0471975511965976, 0.0},
    {0.47342134396168084, -0.39999999999999991, 1.2217304763960306, 0.0},
    {0.64953418120744111, -0.39999999999999991, 1.3962634015954636, 0.0},
    {0.83786408440294280, -0.39999999999999991, 1.5707963267948966, 0.0},
};

const double tolerance_0006 = 2.5000000000000020e-13;

const incomplete_legendre_elliptic_integral_d_fixture<double> fixture_0007[10] = {
    {0.0000000000000000, -0.29999999999999993, 0.0000000000000000, 0.0},
    {0.0017628654390207229, -0.29999999999999993, 0.17453292519943295, 0.0},
    {0.013880285231661113, -0.29999999999999993, 0.34906585039886590, 0.0},
    {0.045607666257172663, -0.29999999999999993, 0.52359877559829882, 0.0},
    {0.10407134378207215, -0.29999999999999993, 0.69813170079773179, 0.0},
    {0.19339214076372369, -0.29999999999999993, 0.87266462599716477, 0.0},
    {0.31406950355012508, -0.29999999999999993, 1.0471975511965976, 0.0},
    {0.46274849122810607, -0.29999999999999993, 1.2217304763960306, 0.0},
    {0.63247751480700520, -0.29999999999999993, 1.3962634015954636, 0.0},
    {0.81350172230293061, -0.29999999999999993, 1.5707963267948966, 0.0},
};

const double tolerance_0007 = 2.5000000000000020e-13;

const incomplete_legendre_elliptic_integral_d_fixture<double> fixture_0008[10] = {
    {0.0000000000000000, -0.19999999999999996, 0.0000000000000000, 0.0},
    {0.0017620656599994277, -0.19999999999999996, 0.17453292519943295, 0.0},
    {0.013855632831176549, -0.19999999999999996, 0.34906585039886590, 0.0},
    {0.045431918346643223, -0.19999999999999996, 0.52359877559829882, 0.0},
    {0.10339441242182820, -0.19999999999999996, 0.69813170079773179, 0.0},
    {0.19155606877615042, -0.19999999999999996, 0.87266462599716477, 0.0},
    {0.31012625152356554, -0.19999999999999996, 1.0471975511965976, 0.0},
    {0.45561282509856105, -0.19999999999999996, 1.2217304763960306, 0.0},
    {0.62118511166396639, -0.19999999999999996, 1.3962634015954636, 0.0},
    {0.79748253029092375, -0.19999999999999996, 1.5707963267948966, 0.0},
};

const double tolerance_0008 = 2.5000000000000020e-13;

const incomplete_legendre_elliptic_integral_d_fixture<double> fixture_0009[10] = {
    {0.0000000000000000, -0.099999999999999978, 0.0000000000000000, 0.0},
    {0.0017615864137194245, -0.099999999999999978, 0.17453292519943295, 0.0},
    {0.013840916025686940, -0.099999999999999978, 0.34906585039886590, 0.0},
    {0.045327616030165399, -0.099999999999999978, 0.52359877559829882, 0.0},
    {0.10299563689215169, -0.099999999999999978, 0.69813170079773179, 0.0},
    {0.19048331395737586, -0.099999999999999978, 0.87266462599716477, 0.0},
    {0.30784122565357930, -0.099999999999999978, 1.0471975511965976, 0.0},
    {0.45150852806732078, -0.099999999999999978, 1.2217304763960306, 0.0},
    {0.61472883791304578, -0.099999999999999978, 1.3962634015954636, 0.0},
    {0.78836194956876604, -0.099999999999999978, 1.5707963267948966, 0.0},
};

const double tolerance_0009 = 2.5000000000000020e-13;

const incomplete_legendre_elliptic_integral_d_fixture<double> fixture_0010[10] = {
    {0.0000000000000000, 0.0000000000000000, 0.0000000000000000, 0.0},
    {0.0017614267682992952, 0.0000000000000000, 0.17453292519943295, 0.0},
    {0.013836022777798124, 0.0000000000000000, 0.34906585039886590, 0.0},
    {0.045293036853039759, 0.0000000000000000, 0.52359877559829882, 0.0},
    {0.10286391214581389, 0.0000000000000000, 0.69813170079773179, 0.0},
    {0.19013037474553038, 0.0000000000000000, 0.87266462599716477, 0.0},
    {0.30709242465218911, 0.0000000000000000, 1.0471975511965976, 0.0},
    {0.45016833577638043, 0.0000000000000000, 1.2217304763960306, 0.0},
    {0.61262666496631457, 0.0000000000000000, 1.3962634015954636, 0.0},
    {0.78539816339744828, 0.0000000000000000, 1.5707963267948966, 0.0},
};

const double tolerance_0010 = 2.5000000000000020e-13;

const incomplete_legendre_elliptic_integral_d_fixture<double> fixture_0011[10] = {
    {0.0000000000000000, 0.10000000000000009, 0.0000000000000000, 0.0},
    {0.0017615864137194245, 0.10000000000000009, 0.17453292519943295, 0.0},
    {0.013840916025686940, 0.10000000000000009, 0.34906585039886590, 0.0},
    {0.045327616030165399, 0.10000000000000009, 0.52359877559829882, 0.0},
    {0.10299563689215169, 0.10000000000000009, 0.69813170079773179, 0.0},
    {0.19048331395737586, 0.10000000000000009, 0.87266462599716477, 0.0},
    {0.30784122565357930, 0.10000000000000009, 1.0471975511965976, 0.0},
    {0.45150852806732078, 0.10000000000000009, 1.2217304763960306, 0.0},
    {0.61472883791304578, 0.10000000000000009, 1.3962634015954636, 0.0},
    {0.78836194956876604, 0.10000000000000009, 1.5707963267948966, 0.0},
};

const double tolerance_0011 = 2.5000000000000020e-13;

const incomplete_legendre_elliptic_integral_d_fixture<double> fixture_0012[10] = {
    {0.0000000000000000, 0.20000000000000018, 0.0000000000000000, 0.0},
    {0.0017620656599994277, 0.20000000000000018, 0.17453292519943295, 0.0},
    {0.013855632831176549, 0.20000000000000018, 0.34906585039886590, 0.0},
    {0.045431918346643223, 0.20000000000000018, 0.52359877559829882, 0.0},
    {0.10339441242182820, 0.20000000000000018, 0.69813170079773179, 0.0},
    {0.19155606877615042, 0.20000000000000018, 0.87266462599716477, 0.0},
    {0.31012625152356554, 0.20000000000000018, 1.0471975511965976, 0.0},
    {0.45561282509856105, 0.20000000000000018, 1.2217304763960306, 0.0},
    {0.62118511166396639, 0.20000000000000018, 1.3962634015954636, 0.0},
    {0.79748253029092375, 0.20000000000000018, 1.5707963267948966, 0.0},
};

const double tolerance_0012 = 2.5000000000000020e-13;

const incomplete_legendre_elliptic_integral_d_fixture<double> fixture_0013[10] = {
    {0.0000000000000000, 0.30000000000000004, 0.0000000000000000, 0.0},
    {0.0017628654390207229, 0.30000000000000004, 0.17453292519943295, 0.0},
    {0.013880285231661113, 0.30000000000000004, 0.34906585039886590, 0.0},
    {0.045607666257172663, 0.30000000000000004, 0.52359877559829882, 0.0},
    {0.10407134378207215, 0.30000000000000004, 0.69813170079773179, 0.0},
    {0.19339214076372369, 0.30000000000000004, 0.87266462599716477, 0.0},
    {0.31406950355012508, 0.30000000000000004, 1.0471975511965976, 0.0},
    {0.46274849122810607, 0.30000000000000004, 1.2217304763960306, 0.0},
    {0.63247751480700520, 0.30000000000000004, 1.3962634015954636, 0.0},
    {0.81350172230293061, 0.30000000000000004, 1.5707963267948966, 0.0},
};

const double tolerance_0013 = 2.5000000000000020e-13;

const incomplete_legendre_elliptic_integral_d_fixture<double> fixture_0014[10] = {
    {0.0000000000000000, 0.40000000000000013, 0.0000000000000000, 0.0},
    {0.0017639873100163696, 0.40000000000000013, 0.17453292519943295, 0.0},
    {0.013915062836514525, 0.40000000000000013, 0.34906585039886590, 0.0},
    {0.045857827106517292, 0.40000000000000013, 0.52359877559829882, 0.0},
    {0.10504599643185691, 0.40000000000000013, 0.69813170079773179, 0.0},
    {0.19607010235413289, 0.40000000000000013, 0.87266462599716477, 0.0},
    {0.31989685162149178, 0.40000000000000013, 1.0471975511965976, 0.0},
    {0.47342134396168090, 0.40000000000000013, 1.2217304763960306, 0.0},
    {0.64953418120744111, 0.40000000000000013, 1.3962634015954636, 0.0},
    {0.83786408440294280, 0.40000000000000013, 1.5707963267948966, 0.0},
};

const double tolerance_0014 = 2.5000000000000020e-13;

const incomplete_legendre_elliptic_integral_d_fixture<double> fixture_0015[10] = {
    {0.0000000000000000, 0.50000000000000000, 0.0000000000000000, 0.0},
    {0.0017654334687950237, 0.50000000000000000, 0.17453292519943295, 0.0},
    {0.013960237293231186, 0.50000000000000000, 0.34906585039886590, 0.0},
    {0.046186768767871089, 0.50000000000000000, 0.52359877559829882, 0.0},
    {0.10634818433863136, 0.50000000000000000, 0.69813170079773179, 0.0},
    {0.19971443163522265, 0.50000000000000000, 0.87266462599716477, 0.0},
    {0.32798045962965344, 0.50000000000000000, 1.0471975511965976, 0.0},
    {0.48849490325825223, 0.50000000000000000, 1.2217304763960306, 0.0},
    {0.67398458871077627, 0.50000000000000000, 1.3962634015954636, 0.0},
    {0.87315258189267553, 0.50000000000000000, 1.5707963267948966, 0.0},
};

const double tolerance_0015 = 2.5000000000000020e-13;

const incomplete_legendre_elliptic_integral_d_fixture<double> fixture_0016[10] = {
    {0.0000000000000000, 0.60000000000000009, 0.0000000000000000, 0.0},
    {0.0017672067608119602, 0.60000000000000009, 0.17453292519943295, 0.0},
    {0.014016168843617425, 0.60000000000000009, 0.34906585039886590, 0.0},
    {0.046600501111499895, 0.60000000000000009, 0.52359877559829882, 0.0},
    {0.10802094630646218, 0.60000000000000009, 0.69813170079773179, 0.0},
    {0.20451502360683607, 0.60000000000000009, 0.87266462599716477, 0.0},
    {0.33892147050821841, 0.60000000000000009, 1.0471975511965976, 0.0},
    {0.50943964442941936, 0.60000000000000009, 1.2217304763960306, 0.0},
    {0.70872353673353272, 0.60000000000000009, 1.3962634015954636, 0.0},
    {0.92408446796396748, 0.60000000000000009, 1.5707963267948966, 0.0},
};

const double tolerance_0016 = 2.5000000000000020e-13;

const incomplete_legendre_elliptic_integral_d_fixture<double> fixture_0017[10] = {
    {0.0000000000000000, 0.70000000000000018, 0.0000000000000000, 0.0},
    {0.0017693106982486103, 0.70000000000000018, 0.17453292519943295, 0.0},
    {0.014083315304350337, 0.70000000000000018, 0.34906585039886590, 0.0},
    {0.047107032299642325, 0.70000000000000018, 0.52359877559829882, 0.0},
    {0.11012537863030469, 0.70000000000000018, 0.69813170079773179, 0.0},
    {0.21076252483177441, 0.70000000000000018, 0.87266462599716477, 0.0},
    {0.35371759117306867, 0.70000000000000018, 1.0471975511965976, 0.0},
    {0.53889336168256530, 0.70000000000000018, 1.2217304763960306, 0.0},
    {0.75928710176862180, 0.70000000000000018, 1.3962634015954636, 0.0},
    {1.0000670669444247, 0.70000000000000018, 1.5707963267948966, 0.0},
};

const double tolerance_0017 = 2.5000000000000020e-13;

const incomplete_legendre_elliptic_integral_d_fixture<double> fixture_0018[10] = {
    {0.0000000000000000, 0.80000000000000004, 0.0000000000000000, 0.0},
    {0.0017717494813139778, 0.80000000000000004, 0.17453292519943295, 0.0},
    {0.014162243950157404, 0.80000000000000004, 0.34906585039886590, 0.0},
    {0.047716886790345484, 0.80000000000000004, 0.52359877559829882, 0.0},
    {0.11274858576397100, 0.80000000000000004, 0.69813170079773179, 0.0},
    {0.21891560249849629, 0.80000000000000004, 0.87266462599716477, 0.0},
    {0.37413671220917655, 0.80000000000000004, 1.0471975511965976, 0.0},
    {0.58211790179390199, 0.80000000000000004, 1.2217304763960306, 0.0},
    {0.83791373072958042, 0.80000000000000004, 1.3962634015954636, 0.0},
    {1.1233638038981608, 0.80000000000000004, 1.5707963267948966, 0.0},
};

const double tolerance_0018 = 2.5000000000000020e-13;

const incomplete_legendre_elliptic_integral_d_fixture<double> fixture_0019[10] = {
    {0.0000000000000000, 0.90000000000000013, 0.0000000000000000, 0.0},
    {0.0017745280240378219, 0.90000000000000013, 0.17453292519943295, 0.0},
    {0.014253646966980111, 0.90000000000000013, 0.34906585039886590, 0.0},
    {0.048443861188898651, 0.90000000000000013, 0.52359877559829882, 0.0},
    {0.11601724174276447, 0.90000000000000013, 0.69813170079773179, 0.0},
    {0.22974037076619519, 0.90000000000000013, 0.87266462599716477, 0.0},
    {0.40369054220887646, 0.90000000000000013, 1.0471975511965976, 0.0},
    {0.65186331684678855, 0.90000000000000013, 1.2217304763960306, 0.0},
    {0.98059172649148840, 0.90000000000000013, 1.3962634015954636, 0.0},
    {1.3689531921495757, 0.90000000000000013, 1.5707963267948966, 0.0},
};

const double tolerance_0019 = 2.5000000000000020e-13;

template<typename T1, unsigned int T2>
void
test(const incomplete_legendre_elliptic_integral_d_fixture<T1>(&fixtures)[T2], T1 tolerance) {
  const T1 epsilon = std::numeric_limits<T1>::epsilon();

  T1 maximum_absolute_difference = T1(-1);
  T1 maximum_absolute_fraction = T1(-1);

  auto error = 0;

  for (auto fixture: fixtures) {
    const T1 g = aten::native::special_functions::incomplete_legendre_elliptic_integral_d(fixture.k, fixture.phi);

    if (std::isnan(g) && !error) {
      error = 1;
    }

    if (!std::isnan(g)) {
      const T1 f = fixture.f0;

      const auto difference = g - f;

      const auto absolute_difference = std::abs(difference);

      if (absolute_difference > maximum_absolute_difference) {
        maximum_absolute_difference = absolute_difference;
      }

      const auto abs_f = std::abs(f);
      const auto abs_g = std::abs(g);

      if (abs_f > T1(10) * epsilon && abs_g > T1(10) * epsilon) {
        const auto fraction = difference / f;

        const auto absolute_fraction = std::abs(fraction);

        if (absolute_fraction > maximum_absolute_fraction) {
          maximum_absolute_fraction = absolute_fraction;
        }
      }
    }
  }

  EXPECT_TRUE(!error && maximum_absolute_fraction < tolerance);
}

TEST(incomplete_legendre_elliptic_integral_d_test, GSL) {
  test(fixture_0001, tolerance_0001);
  test(fixture_0002, tolerance_0002);
  test(fixture_0003, tolerance_0003);
  test(fixture_0004, tolerance_0004);
  test(fixture_0005, tolerance_0005);
  test(fixture_0006, tolerance_0006);
  test(fixture_0007, tolerance_0007);
  test(fixture_0008, tolerance_0008);
  test(fixture_0009, tolerance_0009);
  test(fixture_0010, tolerance_0010);
  test(fixture_0011, tolerance_0011);
  test(fixture_0012, tolerance_0012);
  test(fixture_0013, tolerance_0013);
  test(fixture_0014, tolerance_0014);
  test(fixture_0015, tolerance_0015);
  test(fixture_0016, tolerance_0016);
  test(fixture_0017, tolerance_0017);
  test(fixture_0018, tolerance_0018);
  test(fixture_0019, tolerance_0019);
}