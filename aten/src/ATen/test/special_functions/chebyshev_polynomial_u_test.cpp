#include <gtest/gtest.h>
#include <ATen/native/special_functions/chebyshev_polynomial_u.h>

template<typename T1>
struct chebyshev_polynomial_u_fixture {
  T1 f0;
  unsigned int n;
  T1 x;
  T1 f;
};

const chebyshev_polynomial_u_fixture<double> fixture_0001[21] = {
    {1.0000000000000000, 0, -1.0000000000000000, 0.0},
    {1.0000000000000000, 0, -0.90000000000000002, 0.0},
    {1.0000000000000000, 0, -0.80000000000000004, 0.0},
    {1.0000000000000000, 0, -0.69999999999999996, 0.0},
    {1.0000000000000000, 0, -0.59999999999999998, 0.0},
    {1.0000000000000000, 0, -0.50000000000000000, 0.0},
    {1.0000000000000000, 0, -0.39999999999999991, 0.0},
    {1.0000000000000000, 0, -0.29999999999999993, 0.0},
    {1.0000000000000000, 0, -0.19999999999999996, 0.0},
    {1.0000000000000000, 0, -0.099999999999999978, 0.0},
    {1.0000000000000000, 0, 0.0000000000000000, 0.0},
    {1.0000000000000000, 0, 0.10000000000000009, 0.0},
    {1.0000000000000000, 0, 0.20000000000000018, 0.0},
    {1.0000000000000000, 0, 0.30000000000000004, 0.0},
    {1.0000000000000000, 0, 0.40000000000000013, 0.0},
    {1.0000000000000000, 0, 0.50000000000000000, 0.0},
    {1.0000000000000000, 0, 0.60000000000000009, 0.0},
    {1.0000000000000000, 0, 0.70000000000000018, 0.0},
    {1.0000000000000000, 0, 0.80000000000000004, 0.0},
    {1.0000000000000000, 0, 0.90000000000000013, 0.0},
    {1.0000000000000000, 0, 1.0000000000000000, 0.0},
};

const double tolerance_0001 = 2.5000000000000020e-13;

const chebyshev_polynomial_u_fixture<double> fixture_0002[21] = {
    {-2.0000000000000000, 1, -1.0000000000000000, 0.0},
    {-1.8000000000000000, 1, -0.90000000000000002, 0.0},
    {-1.6000000000000001, 1, -0.80000000000000004, 0.0},
    {-1.3999999999999997, 1, -0.69999999999999996, 0.0},
    {-1.1999999999999995, 1, -0.59999999999999998, 0.0},
    {-1.0000000000000004, 1, -0.50000000000000000, 0.0},
    {-0.80000000000000004, 1, -0.39999999999999991, 0.0},
    {-0.59999999999999998, 1, -0.29999999999999993, 0.0},
    {-0.40000000000000008, 1, -0.19999999999999996, 0.0},
    {-0.19999999999999979, 1, -0.099999999999999978, 0.0},
    {1.2246467991473532e-16, 1, 0.0000000000000000, 0.0},
    {0.20000000000000001, 1, 0.10000000000000009, 0.0},
    {0.40000000000000030, 1, 0.20000000000000018, 0.0},
    {0.60000000000000020, 1, 0.30000000000000004, 0.0},
    {0.80000000000000016, 1, 0.40000000000000013, 0.0},
    {0.99999999999999978, 1, 0.50000000000000000, 0.0},
    {1.2000000000000002, 1, 0.60000000000000009, 0.0},
    {1.4000000000000006, 1, 0.70000000000000018, 0.0},
    {1.6000000000000003, 1, 0.80000000000000004, 0.0},
    {1.8000000000000000, 1, 0.90000000000000013, 0.0},
    {2.0000000000000000, 1, 1.0000000000000000, 0.0},
};

const double tolerance_0002 = 2.5000000000000020e-13;

const chebyshev_polynomial_u_fixture<double> fixture_0003[21] = {
    {-6.0000000000000000, 5, -1.0000000000000000, 0.0},
    {-0.96768000000000109, 5, -0.90000000000000002, 0.0},
    {1.0982400000000001, 5, -0.80000000000000004, 0.0},
    {1.3977599999999994, 5, -0.69999999999999996, 0.0},
    {0.82367999999999886, 5, -0.59999999999999998, 0.0},
    {1.4855200714891849e-15, 5, -0.50000000000000000, 0.0},
    {-0.67967999999999973, 5, -0.39999999999999991, 0.0},
    {-1.0137600000000000, 5, -0.29999999999999993, 0.0},
    {-0.95424000000000009, 5, -0.19999999999999996, 0.0},
    {-0.56831999999999938, 5, -0.099999999999999978, 0.0},
    {3.6739403974420594e-16, 5, 0.0000000000000000, 0.0},
    {0.56832000000000005, 5, 0.10000000000000009, 0.0},
    {0.95424000000000042, 5, 0.20000000000000018, 0.0},
    {1.0137599999999998, 5, 0.30000000000000004, 0.0},
    {0.67967999999999917, 5, 0.40000000000000013, 0.0},
    {7.4276003574459226e-16, 5, 0.50000000000000000, 0.0},
    {-0.82368000000000141, 5, 0.60000000000000009, 0.0},
    {-1.3977600000000006, 5, 0.70000000000000018, 0.0},
    {-1.0982399999999992, 5, 0.80000000000000004, 0.0},
    {0.96768000000000420, 5, 0.90000000000000013, 0.0},
    {6.0000000000000000, 5, 1.0000000000000000, 0.0},
};

const double tolerance_0003 = 2.5000000000000020e-13;

const chebyshev_polynomial_u_fixture<double> fixture_0004[21] = {
    {9.0000000000000000, 8, -1.0000000000000000, 0.0},
    {-1.8219622399999986, 8, -0.90000000000000002, 0.0},
    {-0.78683904000000016, 8, -0.80000000000000004, 0.0},
    {1.0751385600000023, 8, -0.69999999999999996, 0.0},
    {1.1019289599999977, 8, -0.59999999999999998, 0.0},
    {3.2538602066383445e-15, 8, -0.50000000000000000, 0.0},
    {-0.92323583999999981, 8, -0.39999999999999991, 0.0},
    {-0.96579584000000074, 8, -0.29999999999999993, 0.0},
    {-0.24401664000000026, 8, -0.19999999999999996, 0.0},
    {0.62355456000000076, 8, -0.099999999999999978, 0.0},
    {1.0000000000000000, 8, 0.0000000000000000, 0.0},
    {0.62355455999999998, 8, 0.10000000000000009, 0.0},
    {-0.24401664000000134, 8, 0.20000000000000018, 0.0},
    {-0.96579584000000052, 8, 0.30000000000000004, 0.0},
    {-0.92323583999999903, 8, 0.40000000000000013, 0.0},
    {-1.6269301033191719e-15, 8, 0.50000000000000000, 0.0},
    {1.1019289600000008, 8, 0.60000000000000009, 0.0},
    {1.0751385599999979, 8, 0.70000000000000018, 0.0},
    {-0.78683904000000182, 8, 0.80000000000000004, 0.0},
    {-1.8219622399999968, 8, 0.90000000000000013, 0.0},
    {9.0000000000000000, 8, 1.0000000000000000, 0.0},
};

const double tolerance_0004 = 2.5000000000000020e-13;

const chebyshev_polynomial_u_fixture<double> fixture_0005[21] = {
    {11.000000000000000, 10, -1.0000000000000000, 0.0},
    {-2.2234571775999998, 10, -0.90000000000000002, 0.0},
    {1.1901541376000000, 10, -0.80000000000000004, 0.0},
    {0.87545845759999508, 10, -0.69999999999999996, 0.0},
    {-0.87506421760000008, 10, -0.59999999999999998, 0.0},
    {-1.0000000000000011, 10, -0.50000000000000000, 0.0},
    {0.20145674240000186, 10, -0.39999999999999991, 0.0},
    {1.0252491776000003, 10, -0.29999999999999993, 0.0},
    {0.61289461760000030, 10, -0.19999999999999996, 0.0},
    {-0.45423093760000111, 10, -0.099999999999999978, 0.0},
    {-1.0000000000000000, 10, 0.0000000000000000, 0.0},
    {-0.45423093759999988, 10, 0.10000000000000009, 0.0},
    {0.61289461760000130, 10, 0.20000000000000018, 0.0},
    {1.0252491775999997, 10, 0.30000000000000004, 0.0},
    {0.20145674239999853, 10, 0.40000000000000013, 0.0},
    {-0.99999999999999944, 10, 0.50000000000000000, 0.0},
    {-0.87506421759999919, 10, 0.60000000000000009, 0.0},
    {0.87545845760000485, 10, 0.70000000000000018, 0.0},
    {1.1901541375999987, 10, 0.80000000000000004, 0.0},
    {-2.2234571776000029, 10, 0.90000000000000013, 0.0},
    {11.000000000000000, 10, 1.0000000000000000, 0.0},
};

const double tolerance_0005 = 2.5000000000000020e-13;

const chebyshev_polynomial_u_fixture<double> fixture_0006[21] = {
    {21.000000000000000, 20, -1.0000000000000000, 0.0},
    {-0.10729319922321121, 20, -0.90000000000000002, 0.0},
    {1.3529266103276116, 20, -0.80000000000000004, 0.0},
    {-1.1748116344605197, 20, -0.69999999999999996, 0.0},
    {0.72999598815708744, 20, -0.59999999999999998, 0.0},
    {6.2249003496167144e-15, 20, -0.50000000000000000, 0.0},
    {-0.77342309614825056, 20, -0.39999999999999991, 0.0},
    {1.0413172668589772, 20, -0.29999999999999993, 0.0},
    {-0.47480370245611236, 20, -0.19999999999999996, 0.0},
    {-0.51043648289346744, 20, -0.099999999999999978, 0.0},
    {1.0000000000000000, 20, 0.0000000000000000, 0.0},
    {-0.51043648289346966, 20, 0.10000000000000009, 0.0},
    {-0.47480370245611009, 20, 0.20000000000000018, 0.0},
    {1.0413172668589774, 20, 0.30000000000000004, 0.0},
    {-0.77342309614825533, 20, 0.40000000000000013, 0.0},
    {-3.1124501748083564e-15, 20, 0.50000000000000000, 0.0},
    {0.72999598815707789, 20, 0.60000000000000009, 0.0},
    {-1.1748116344605104, 20, 0.70000000000000018, 0.0},
    {1.3529266103276094, 20, 0.80000000000000004, 0.0},
    {-0.10729319922320132, 20, 0.90000000000000013, 0.0},
    {21.000000000000000, 20, 1.0000000000000000, 0.0},
};

const double tolerance_0006 = 1.0000000000000008e-12;

const chebyshev_polynomial_u_fixture<double> fixture_0007[21] = {
    {41.000000000000000, 40, -1.0000000000000000, 0.0},
    {-0.80270907052242491, 40, -0.90000000000000002, 0.0},
    {1.5820631745083924, 40, -0.80000000000000004, 0.0},
    {1.3027810110878064, 40, -0.69999999999999996, 0.0},
    {0.39319882111185073, 40, -0.59999999999999998, 0.0},
    {-1.0000000000000078, 40, -0.50000000000000000, 0.0},
    {-0.43148251814691696, 40, -0.39999999999999991, 0.0},
    {1.0454181275398591, 40, -0.29999999999999993, 0.0},
    {-0.39903948352492674, 40, -0.19999999999999996, 0.0},
    {-0.57206106736772666, 40, -0.099999999999999978, 0.0},
    {1.0000000000000000, 40, 0.0000000000000000, 0.0},
    {-0.57206106736771378, 40, 0.10000000000000009, 0.0},
    {-0.39903948352492813, 40, 0.20000000000000018, 0.0},
    {1.0454181275398597, 40, 0.30000000000000004, 0.0},
    {-0.43148251814691552, 40, 0.40000000000000013, 0.0},
    {-0.99999999999999611, 40, 0.50000000000000000, 0.0},
    {0.39319882111183224, 40, 0.60000000000000009, 0.0},
    {1.3027810110877955, 40, 0.70000000000000018, 0.0},
    {1.5820631745083902, 40, 0.80000000000000004, 0.0},
    {-0.80270907052246676, 40, 0.90000000000000013, 0.0},
    {41.000000000000000, 40, 1.0000000000000000, 0.0},
};

const double tolerance_0007 = 2.5000000000000015e-12;

const chebyshev_polynomial_u_fixture<double> fixture_0008[21] = {
    {101.00000000000000, 100, -1.0000000000000000, 0.0},
    {2.2941569055367088, 100, -0.90000000000000002, 0.0},
    {1.3840079115348121, 100, -0.80000000000000004, 0.0},
    {-1.3650880507569774, 100, -0.69999999999999996, 0.0},
    {-0.69645077478962591, 100, -0.59999999999999998, 0.0},
    {-1.0000000000000131, 100, -0.50000000000000000, 0.0},
    {-0.81848831585266746, 100, -0.39999999999999991, 0.0},
    {0.83959086275187034, 100, -0.29999999999999993, 0.0},
    {0.084819997511314874, 100, -0.19999999999999996, 0.0},
    {-0.77376598684556996, 100, -0.099999999999999978, 0.0},
    {1.0000000000000000, 100, 0.0000000000000000, 0.0},
    {-0.77376598684556430, 100, 0.10000000000000009, 0.0},
    {0.084819997511305908, 100, 0.20000000000000018, 0.0},
    {0.83959086275188477, 100, 0.30000000000000004, 0.0},
    {-0.81848831585265081, 100, 0.40000000000000013, 0.0},
    {-0.99999999999999345, 100, 0.50000000000000000, 0.0},
    {-0.69645077478966488, 100, 0.60000000000000009, 0.0},
    {-1.3650880507569987, 100, 0.70000000000000018, 0.0},
    {1.3840079115348072, 100, 0.80000000000000004, 0.0},
    {2.2941569055367101, 100, 0.90000000000000013, 0.0},
    {101.00000000000000, 100, 1.0000000000000000, 0.0},
};

const double tolerance_0008 = 1.0000000000000006e-11;

template<typename T1, unsigned int T2>
void
test(const chebyshev_polynomial_u_fixture<T1>(&fixtures)[T2], T1 tolerance) {
  const T1 epsilon = std::numeric_limits<T1>::epsilon();

  T1 maximum_absolute_difference = T1(-1);
  T1 maximum_absolute_fraction = T1(-1);

  auto error = 0;

  for (auto fixture: fixtures) {
    const T1 g = aten::native::special_functions::chebyshev_polynomial_u(fixture.n, fixture.x);

    if (std::isnan(g) && !error) {
      error = 1;
    }

    if (!std::isnan(g)) {
      const T1 f = fixture.f0;

      const auto difference = g - f;

      const auto absolute_difference = std::abs(difference);

      if (absolute_difference > maximum_absolute_difference) {
        maximum_absolute_difference = absolute_difference;
      }

      const auto abs_f = std::abs(f);
      const auto abs_g = std::abs(g);

      if (abs_f > T1(10) * epsilon && abs_g > T1(10) * epsilon) {
        const auto fraction = difference / f;

        const auto absolute_fraction = std::abs(fraction);

        if (absolute_fraction > maximum_absolute_fraction) {
          maximum_absolute_fraction = absolute_fraction;
        }
      }
    }
  }

  EXPECT_TRUE(!error && maximum_absolute_fraction < tolerance);
}

TEST(ChebyshevPolynomialUTest, GSL) {
  test(fixture_0001, tolerance_0001);
  test(fixture_0002, tolerance_0002);
  test(fixture_0003, tolerance_0003);
  test(fixture_0004, tolerance_0004);
  test(fixture_0005, tolerance_0005);
  test(fixture_0006, tolerance_0006);
  test(fixture_0007, tolerance_0007);
  test(fixture_0008, tolerance_0008);
}
