#include <gtest/gtest.h>
#include <ATen/native/special_functions/airy_bi.h>

template<typename T1>
struct airy_bi_fixture {
  T1 f0;
  T1 x;
  T1 f;
};

const airy_bi_fixture<double> fixture_0001[] = {
    {-0.31467982964383845, -10.000000000000000, 0.0},
    {0.037785432489467467, -9.5000000000000000, 0.0},
    {0.32494732345524480, -9.0000000000000000, 0.0},
    {0.0077544364476580746, -8.5000000000000000, 0.0},
    {-0.33125158075113792, -8.0000000000000000, 0.0},
    {-0.11246348507649087, -7.5000000000000000, 0.0},
    {0.29376207185441372, -7.0000000000000000, 0.0},
    {0.26101265763648318, -6.5000000000000000, 0.0},
    {-0.14669837667055663, -6.0000000000000000, 0.0},
    {-0.36781345391571185, -5.5000000000000000, 0.0},
    {-0.13836913490160088, -5.0000000000000000, 0.0},
    {0.25387265769693296, -4.5000000000000000, 0.0},
    {0.39223470570699931, -4.0000000000000000, 0.0},
    {0.16893983748105870, -3.5000000000000000, 0.0},
    {-0.19828962637492650, -3.0000000000000000, 0.0},
    {-0.43242247184070520, -2.5000000000000000, 0.0},
    {-0.41230258795639835, -2.0000000000000000, 0.0},
    {-0.19178486115704119, -1.5000000000000000, 0.0},
    {0.10399738949694459, -1.0000000000000000, 0.0},
    {0.38035265975105381, -0.50000000000000000, 0.0},
    {0.61492662744600068, 0.0000000000000000, 0.0},
    {0.85427704310315555, 0.50000000000000000, 0.0},
    {1.2074235949528713, 1.0000000000000000, 0.0},
    {1.8789415037478949, 1.5000000000000000, 0.0},
    {3.2980949999782148, 2.0000000000000000, 0.0},
    {6.4816607384605804, 2.5000000000000000, 0.0},
    {14.037328963730236, 3.0000000000000000, 0.0},
    {33.055506754611478, 3.5000000000000000, 0.0},
    {83.847071408468111, 4.0000000000000000, 0.0},
    {227.58808183559950, 4.5000000000000000, 0.0},
    {657.79204417117160, 5.0000000000000000, 0.0},
    {2016.5800386595315, 5.5000000000000000, 0.0},
    {6536.4461048098583, 6.0000000000000000, 0.0},
    {22340.607718396990, 6.5000000000000000, 0.0},
    {80327.790709430337, 7.0000000000000000, 0.0},
    {303229.61511253362, 7.5000000000000000, 0.0},
    {1199586.0041244617, 8.0000000000000000, 0.0},
    {4965319.5414712988, 8.5000000000000000, 0.0},
    {21472868.891435351, 9.0000000000000000, 0.0},
    {96892265.580451161, 9.5000000000000000, 0.0},
    {455641153.54822654, 10.000000000000000, 0.0},
};

const double tolerance_0001 = 1.0000000000000006e-11;

template<typename T1, unsigned int T2>
void
test(const airy_bi_fixture<T1>(&fixtures)[T2], T1 tolerance) {
  const T1 epsilon = std::numeric_limits<T1>::epsilon();

  T1 maximum_absolute_difference = T1(-1);
  T1 maximum_absolute_fraction = T1(-1);

  auto error = 0;

  for (auto fixture: fixtures) {
    const T1 g = aten::native::special_functions::airy_bi(fixture.x);

    if (std::isnan(g) && !error) {
      error = 1;
    }

    if (!std::isnan(g)) {
      const T1 f = fixture.f0;

      const auto difference = g - f;

      const auto absolute_difference = std::abs(difference);

      if (absolute_difference > maximum_absolute_difference) {
        maximum_absolute_difference = absolute_difference;
      }

      const auto abs_f = std::abs(f);
      const auto abs_g = std::abs(g);

      if (abs_f > T1(10) * epsilon && abs_g > T1(10) * epsilon) {
        const auto fraction = difference / f;

        const auto absolute_fraction = std::abs(fraction);

        if (absolute_fraction > maximum_absolute_fraction) {
          maximum_absolute_fraction = absolute_fraction;
        }
      }
    }
  }

  EXPECT_TRUE(!error && maximum_absolute_fraction < tolerance);
}

TEST(AiryBiTest, GSL) {
  test(fixture_0001, tolerance_0001);
}
