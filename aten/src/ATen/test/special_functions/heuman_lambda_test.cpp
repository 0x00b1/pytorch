#include <gtest/gtest.h>
#include <ATen/native/special_functions/heuman_lambda.h>

template<typename T1>
struct heuman_lambda_fixture {
  T1 f0;
  T1 k;
  T1 phi;
  T1 f;
};

const heuman_lambda_fixture<double> fixture_0001[8] = {
    {0.12982697580745808, -0.90000000000000002, 0.17453292519943295, 0.0},
    {0.25752498383895317, -0.90000000000000002, 0.34906585039886590, 0.0},
    {0.38116720359439771, -0.90000000000000002, 0.52359877559829882, 0.0},
    {0.49922731621729377, -0.90000000000000002, 0.69813170079773179, 0.0},
    {0.61076532928819771, -0.90000000000000002, 0.87266462599716477, 0.0},
    {0.71558223929052334, -0.90000000000000002, 1.0471975511965976, 0.0},
    {0.81431191434980899, -0.90000000000000002, 1.2217304763960306, 0.0},
    {0.90840923019051545, -0.90000000000000002, 1.3962634015954636, 0.0},
};

const double tolerance_0001 = 5.0000000000000039e-13;

const heuman_lambda_fixture<double> fixture_0002[8] = {
    {0.14126742816292986, -0.80000000000000004, 0.17453292519943295, 0.0},
    {0.27928713607126193, -0.80000000000000004, 0.34906585039886590, 0.0},
    {0.41105302042041136, -0.80000000000000004, 0.52359877559829882, 0.0},
    {0.53405685578205797, -0.80000000000000004, 0.69813170079773179, 0.0},
    {0.64656998728035819, -0.80000000000000004, 0.87266462599716477, 0.0},
    {0.74794690182714274, -0.80000000000000004, 1.0471975511965976, 0.0},
    {0.83891015662364632, -0.80000000000000004, 1.2217304763960306, 0.0},
    {0.92171087660102025, -0.80000000000000004, 1.3962634015954636, 0.0},
};

const double tolerance_0002 = 2.5000000000000020e-13;

const heuman_lambda_fixture<double> fixture_0003[8] = {
    {0.14995891526474947, -0.69999999999999996, 0.17453292519943295, 0.0},
    {0.29594267142594466, -0.69999999999999996, 0.34906585039886590, 0.0},
    {0.43420836208514768, -0.69999999999999996, 0.52359877559829882, 0.0},
    {0.56150272604917162, -0.69999999999999996, 0.69813170079773179, 0.0},
    {0.67537565506518926, -0.69999999999999996, 0.87266462599716477, 0.0},
    {0.77458446996088093, -0.69999999999999996, 1.0471975511965976, 0.0},
    {0.85959635233652065, -0.69999999999999996, 1.2217304763960306, 0.0},
    {0.93307572713379527, -0.69999999999999996, 1.3962634015954636, 0.0},
};

const double tolerance_0003 = 2.5000000000000020e-13;

const heuman_lambda_fixture<double> fixture_0004[8] = {
    {0.15681433121910107, -0.59999999999999998, 0.17453292519943295, 0.0},
    {0.30916651305959242, -0.59999999999999998, 0.34906585039886590, 0.0},
    {0.45280289551350805, -0.59999999999999998, 0.52359877559829882, 0.0},
    {0.58391106083307376, -0.59999999999999998, 0.69813170079773179, 0.0},
    {0.69941589446161700, -0.59999999999999998, 0.87266462599716477, 0.0},
    {0.79740965737703906, -0.59999999999999998, 1.0471975511965976, 0.0},
    {0.87781712551231406, -0.59999999999999998, 1.2217304763960306, 0.0},
    {0.94331022207657789, -0.59999999999999998, 1.3962634015954636, 0.0},
};

const double tolerance_0004 = 2.5000000000000020e-13;

const heuman_lambda_fixture<double> fixture_0005[8] = {
    {0.16224731278788521, -0.50000000000000000, 0.17453292519943295, 0.0},
    {0.31970697450541935, -0.50000000000000000, 0.34906585039886590, 0.0},
    {0.46777719771323173, -0.50000000000000000, 0.52359877559829882, 0.0},
    {0.60224413068989857, -0.50000000000000000, 0.69813170079773179, 0.0},
    {0.71953336405253487, -0.50000000000000000, 0.87266462599716477, 0.0},
    {0.81709279141177393, -0.50000000000000000, 1.0471975511965976, 0.0},
    {0.89409511418245902, -0.50000000000000000, 1.2217304763960306, 0.0},
    {0.95275069129312706, -0.50000000000000000, 1.3962634015954636, 0.0},
};

const double tolerance_0005 = 2.5000000000000020e-13;

const heuman_lambda_fixture<double> fixture_0006[8] = {
    {0.16648761753143587, -0.39999999999999991, 0.17453292519943295, 0.0},
    {0.32797372506471695, -0.39999999999999991, 0.34906585039886590, 0.0},
    {0.47962710106777490, -0.39999999999999991, 0.52359877559829882, 0.0},
    {0.61696383438197122, -0.39999999999999991, 0.69813170079773179, 0.0},
    {0.73605040181836656, -0.39999999999999991, 0.87266462599716477, 0.0},
    {0.83379631920891617, -0.39999999999999991, 1.0471975511965976, 0.0},
    {0.90854324658368646, -0.39999999999999991, 1.2217304763960306, 0.0},
    {0.96153993654604863, -0.39999999999999991, 1.3962634015954636, 0.0},
};

const double tolerance_0006 = 2.5000000000000020e-13;

const heuman_lambda_fixture<double> fixture_0007[8] = {
    {0.16967535365409964, -0.29999999999999993, 0.17453292519943295, 0.0},
    {0.33421304275802655, -0.29999999999999993, 0.34906585039886590, 0.0},
    {0.48863774824317452, -0.29999999999999993, 0.52359877559829882, 0.0},
    {0.62829853439172034, -0.29999999999999993, 0.69813170079773179, 0.0},
    {0.74903637090112496, -0.29999999999999993, 0.87266462599716477, 0.0},
    {0.84738791409536607, -0.29999999999999993, 1.0471975511965976, 0.0},
    {0.92096562168315166, -0.29999999999999993, 1.2217304763960306, 0.0},
    {0.96967154769878450, -0.29999999999999993, 1.3962634015954636, 0.0},
};

const double tolerance_0007 = 2.5000000000000020e-13;

const heuman_lambda_fixture<double> fixture_0008[8] = {
    {0.17189899540184925, -0.19999999999999996, 0.17453292519943295, 0.0},
    {0.33857841822753937, -0.19999999999999996, 0.34906585039886590, 0.0},
    {0.49497858604892686, -0.19999999999999996, 0.52359877559829882, 0.0},
    {0.63635578869585696, -0.19999999999999996, 0.69813170079773179, 0.0},
    {0.75843245554643557, -0.19999999999999996, 0.87266462599716477, 0.0},
    {0.85754687135875229, -0.19999999999999996, 1.0471975511965976, 0.0},
    {0.93084918973014774, -0.19999999999999996, 1.2217304763960306, 0.0},
    {0.97691162215553884, -0.19999999999999996, 1.3962634015954636, 0.0},
};

const double tolerance_0008 = 2.5000000000000020e-13;

const heuman_lambda_fixture<double> fixture_0009[8] = {
    {0.17321327365951394, -0.099999999999999978, 0.17453292519943295, 0.0},
    {0.34116376673499382, -0.099999999999999978, 0.34906585039886590, 0.0},
    {0.49874868897634334, -0.099999999999999978, 0.52359877559829882, 0.0},
    {0.64118044075414027, -0.099999999999999978, 0.69813170079773179, 0.0},
    {0.76413249518266968, -0.099999999999999978, 0.87266462599716477, 0.0},
    {0.86387230276439919, -0.099999999999999978, 1.0471975511965976, 0.0},
    {0.93738180823668094, -0.099999999999999978, 1.2217304763960306, 0.0},
    {0.98251288868022923, -0.099999999999999978, 1.3962634015954636, 0.0},
};

const double tolerance_0009 = 2.5000000000000020e-13;

const heuman_lambda_fixture<double> fixture_0010[8] = {
    {0.17364817766693033, 0.0000000000000000, 0.17453292519943295, 0.0},
    {0.34202014332566871, 0.0000000000000000, 0.34906585039886590, 0.0},
    {0.49999999999999994, 0.0000000000000000, 0.52359877559829882, 0.0},
    {0.64278760968653925, 0.0000000000000000, 0.69813170079773179, 0.0},
    {0.76604444311897801, 0.0000000000000000, 0.87266462599716477, 0.0},
    {0.86602540378443860, 0.0000000000000000, 1.0471975511965976, 0.0},
    {0.93969262078590832, 0.0000000000000000, 1.2217304763960306, 0.0},
    {0.98480775301220802, 0.0000000000000000, 1.3962634015954636, 0.0},
};

const double tolerance_0010 = 2.5000000000000020e-13;

const heuman_lambda_fixture<double> fixture_0011[8] = {
    {0.17321327365951394, 0.10000000000000009, 0.17453292519943295, 0.0},
    {0.34116376673499382, 0.10000000000000009, 0.34906585039886590, 0.0},
    {0.49874868897634334, 0.10000000000000009, 0.52359877559829882, 0.0},
    {0.64118044075414027, 0.10000000000000009, 0.69813170079773179, 0.0},
    {0.76413249518266968, 0.10000000000000009, 0.87266462599716477, 0.0},
    {0.86387230276439919, 0.10000000000000009, 1.0471975511965976, 0.0},
    {0.93738180823668094, 0.10000000000000009, 1.2217304763960306, 0.0},
    {0.98251288868022923, 0.10000000000000009, 1.3962634015954636, 0.0},
};

const double tolerance_0011 = 2.5000000000000020e-13;

const heuman_lambda_fixture<double> fixture_0012[8] = {
    {0.17189899540184925, 0.20000000000000018, 0.17453292519943295, 0.0},
    {0.33857841822753937, 0.20000000000000018, 0.34906585039886590, 0.0},
    {0.49497858604892686, 0.20000000000000018, 0.52359877559829882, 0.0},
    {0.63635578869585696, 0.20000000000000018, 0.69813170079773179, 0.0},
    {0.75843245554643546, 0.20000000000000018, 0.87266462599716477, 0.0},
    {0.85754687135875229, 0.20000000000000018, 1.0471975511965976, 0.0},
    {0.93084918973014774, 0.20000000000000018, 1.2217304763960306, 0.0},
    {0.97691162215553884, 0.20000000000000018, 1.3962634015954636, 0.0},
};

const double tolerance_0012 = 2.5000000000000020e-13;

const heuman_lambda_fixture<double> fixture_0013[8] = {
    {0.16967535365409961, 0.30000000000000004, 0.17453292519943295, 0.0},
    {0.33421304275802655, 0.30000000000000004, 0.34906585039886590, 0.0},
    {0.48863774824317452, 0.30000000000000004, 0.52359877559829882, 0.0},
    {0.62829853439172034, 0.30000000000000004, 0.69813170079773179, 0.0},
    {0.74903637090112496, 0.30000000000000004, 0.87266462599716477, 0.0},
    {0.84738791409536607, 0.30000000000000004, 1.0471975511965976, 0.0},
    {0.92096562168315166, 0.30000000000000004, 1.2217304763960306, 0.0},
    {0.96967154769878450, 0.30000000000000004, 1.3962634015954636, 0.0},
};

const double tolerance_0013 = 2.5000000000000020e-13;

const heuman_lambda_fixture<double> fixture_0014[8] = {
    {0.16648761753143584, 0.40000000000000013, 0.17453292519943295, 0.0},
    {0.32797372506471695, 0.40000000000000013, 0.34906585039886590, 0.0},
    {0.47962710106777490, 0.40000000000000013, 0.52359877559829882, 0.0},
    {0.61696383438197122, 0.40000000000000013, 0.69813170079773179, 0.0},
    {0.73605040181836656, 0.40000000000000013, 0.87266462599716477, 0.0},
    {0.83379631920891617, 0.40000000000000013, 1.0471975511965976, 0.0},
    {0.90854324658368646, 0.40000000000000013, 1.2217304763960306, 0.0},
    {0.96153993654604863, 0.40000000000000013, 1.3962634015954636, 0.0},
};

const double tolerance_0014 = 2.5000000000000020e-13;

const heuman_lambda_fixture<double> fixture_0015[8] = {
    {0.16224731278788521, 0.50000000000000000, 0.17453292519943295, 0.0},
    {0.31970697450541935, 0.50000000000000000, 0.34906585039886590, 0.0},
    {0.46777719771323173, 0.50000000000000000, 0.52359877559829882, 0.0},
    {0.60224413068989857, 0.50000000000000000, 0.69813170079773179, 0.0},
    {0.71953336405253487, 0.50000000000000000, 0.87266462599716477, 0.0},
    {0.81709279141177393, 0.50000000000000000, 1.0471975511965976, 0.0},
    {0.89409511418245902, 0.50000000000000000, 1.2217304763960306, 0.0},
    {0.95275069129312706, 0.50000000000000000, 1.3962634015954636, 0.0},
};

const double tolerance_0015 = 2.5000000000000020e-13;

const heuman_lambda_fixture<double> fixture_0016[8] = {
    {0.15681433121910107, 0.60000000000000009, 0.17453292519943295, 0.0},
    {0.30916651305959236, 0.60000000000000009, 0.34906585039886590, 0.0},
    {0.45280289551350805, 0.60000000000000009, 0.52359877559829882, 0.0},
    {0.58391106083307376, 0.60000000000000009, 0.69813170079773179, 0.0},
    {0.69941589446161700, 0.60000000000000009, 0.87266462599716477, 0.0},
    {0.79740965737703895, 0.60000000000000009, 1.0471975511965976, 0.0},
    {0.87781712551231406, 0.60000000000000009, 1.2217304763960306, 0.0},
    {0.94331022207657789, 0.60000000000000009, 1.3962634015954636, 0.0},
};

const double tolerance_0016 = 2.5000000000000020e-13;

const heuman_lambda_fixture<double> fixture_0017[8] = {
    {0.14995891526474944, 0.70000000000000018, 0.17453292519943295, 0.0},
    {0.29594267142594466, 0.70000000000000018, 0.34906585039886590, 0.0},
    {0.43420836208514763, 0.70000000000000018, 0.52359877559829882, 0.0},
    {0.56150272604917162, 0.70000000000000018, 0.69813170079773179, 0.0},
    {0.67537565506518926, 0.70000000000000018, 0.87266462599716477, 0.0},
    {0.77458446996088082, 0.70000000000000018, 1.0471975511965976, 0.0},
    {0.85959635233652054, 0.70000000000000018, 1.2217304763960306, 0.0},
    {0.93307572713379527, 0.70000000000000018, 1.3962634015954636, 0.0},
};

const double tolerance_0017 = 2.5000000000000020e-13;

const heuman_lambda_fixture<double> fixture_0018[8] = {
    {0.14126742816292986, 0.80000000000000004, 0.17453292519943295, 0.0},
    {0.27928713607126193, 0.80000000000000004, 0.34906585039886590, 0.0},
    {0.41105302042041136, 0.80000000000000004, 0.52359877559829882, 0.0},
    {0.53405685578205797, 0.80000000000000004, 0.69813170079773179, 0.0},
    {0.64656998728035819, 0.80000000000000004, 0.87266462599716477, 0.0},
    {0.74794690182714274, 0.80000000000000004, 1.0471975511965976, 0.0},
    {0.83891015662364632, 0.80000000000000004, 1.2217304763960306, 0.0},
    {0.92171087660102025, 0.80000000000000004, 1.3962634015954636, 0.0},
};

const double tolerance_0018 = 2.5000000000000020e-13;

const heuman_lambda_fixture<double> fixture_0019[8] = {
    {0.12982697580745806, 0.90000000000000013, 0.17453292519943295, 0.0},
    {0.25752498383895317, 0.90000000000000013, 0.34906585039886590, 0.0},
    {0.38116720359439765, 0.90000000000000013, 0.52359877559829882, 0.0},
    {0.49922731621729377, 0.90000000000000013, 0.69813170079773179, 0.0},
    {0.61076532928819771, 0.90000000000000013, 0.87266462599716477, 0.0},
    {0.71558223929052323, 0.90000000000000013, 1.0471975511965976, 0.0},
    {0.81431191434980899, 0.90000000000000013, 1.2217304763960306, 0.0},
    {0.90840923019051545, 0.90000000000000013, 1.3962634015954636, 0.0},
};

const double tolerance_0019 = 2.5000000000000020e-13;

template<typename T1, unsigned int T2>
void
test(const heuman_lambda_fixture<T1>(&fixtures)[T2], T1 tolerance) {
  const T1 epsilon = std::numeric_limits<T1>::epsilon();

  T1 maximum_absolute_difference = T1(-1);
  T1 maximum_absolute_fraction = T1(-1);

  auto error = 0;

  for (auto fixture: fixtures) {
    const T1 g = aten::native::special_functions::heuman_lambda(fixture.k, fixture.phi);

    if (std::isnan(g) && !error) {
      error = 1;
    }

    if (!std::isnan(g)) {
      const T1 f = fixture.f0;

      const auto difference = g - f;

      const auto absolute_difference = std::abs(difference);

      if (absolute_difference > maximum_absolute_difference) {
        maximum_absolute_difference = absolute_difference;
      }

      const auto abs_f = std::abs(f);
      const auto abs_g = std::abs(g);

      if (abs_f > T1(10) * epsilon && abs_g > T1(10) * epsilon) {
        const auto fraction = difference / f;

        const auto absolute_fraction = std::abs(fraction);

        if (absolute_fraction > maximum_absolute_fraction) {
          maximum_absolute_fraction = absolute_fraction;
        }
      }
    }
  }

  EXPECT_TRUE(!error && maximum_absolute_fraction < tolerance);
}

TEST(HeumanLambdaTest, GSL) {
  test(fixture_0001, tolerance_0001);
  test(fixture_0002, tolerance_0002);
  test(fixture_0003, tolerance_0003);
  test(fixture_0004, tolerance_0004);
  test(fixture_0005, tolerance_0005);
  test(fixture_0006, tolerance_0006);
  test(fixture_0007, tolerance_0007);
  test(fixture_0008, tolerance_0008);
  test(fixture_0009, tolerance_0009);
  test(fixture_0010, tolerance_0010);
  test(fixture_0011, tolerance_0011);
  test(fixture_0012, tolerance_0012);
  test(fixture_0013, tolerance_0013);
  test(fixture_0014, tolerance_0014);
  test(fixture_0015, tolerance_0015);
  test(fixture_0016, tolerance_0016);
  test(fixture_0017, tolerance_0017);
  test(fixture_0018, tolerance_0018);
  test(fixture_0019, tolerance_0019);
}