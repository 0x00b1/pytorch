#include <gtest/gtest.h>
#include <ATen/native/special_functions/chebyshev_polynomial_v.h>

template<typename T1>
struct chebyshev_polynomial_v_fixture {
  T1 f0;
  unsigned int n;
  T1 x;
  T1 f;
};

const chebyshev_polynomial_v_fixture<double> fixture_0001[21] = {
    {1.0000000000000000, 0, -1.0000000000000000, 0.0},
    {1.0000000000000000, 0, -0.90000000000000002, 0.0},
    {1.0000000000000000, 0, -0.80000000000000004, 0.0},
    {1.0000000000000000, 0, -0.69999999999999996, 0.0},
    {1.0000000000000000, 0, -0.59999999999999998, 0.0},
    {1.0000000000000000, 0, -0.50000000000000000, 0.0},
    {1.0000000000000000, 0, -0.39999999999999991, 0.0},
    {1.0000000000000000, 0, -0.29999999999999993, 0.0},
    {1.0000000000000000, 0, -0.19999999999999996, 0.0},
    {1.0000000000000000, 0, -0.099999999999999978, 0.0},
    {1.0000000000000000, 0, 0.0000000000000000, 0.0},
    {1.0000000000000000, 0, 0.10000000000000009, 0.0},
    {1.0000000000000000, 0, 0.20000000000000018, 0.0},
    {1.0000000000000000, 0, 0.30000000000000004, 0.0},
    {1.0000000000000000, 0, 0.40000000000000013, 0.0},
    {1.0000000000000000, 0, 0.50000000000000000, 0.0},
    {1.0000000000000000, 0, 0.60000000000000009, 0.0},
    {1.0000000000000000, 0, 0.70000000000000018, 0.0},
    {1.0000000000000000, 0, 0.80000000000000004, 0.0},
    {1.0000000000000000, 0, 0.90000000000000013, 0.0},
    {1.0000000000000000, 0, 1.0000000000000000, 0.0},
};

const double tolerance_0001 = 2.5000000000000020e-13;

const chebyshev_polynomial_v_fixture<double> fixture_0002[21] = {
    {-3.0000000000000000, 1, -1.0000000000000000, 0.0},
    {-2.7999999999999994, 1, -0.90000000000000002, 0.0},
    {-2.6000000000000001, 1, -0.80000000000000004, 0.0},
    {-2.3999999999999995, 1, -0.69999999999999996, 0.0},
    {-2.1999999999999997, 1, -0.59999999999999998, 0.0},
    {-2.0000000000000004, 1, -0.50000000000000000, 0.0},
    {-1.8000000000000000, 1, -0.39999999999999991, 0.0},
    {-1.6000000000000001, 1, -0.29999999999999993, 0.0},
    {-1.3999999999999999, 1, -0.19999999999999996, 0.0},
    {-1.1999999999999997, 1, -0.099999999999999978, 0.0},
    {-0.99999999999999989, 1, 0.0000000000000000, 0.0},
    {-0.79999999999999993, 1, 0.10000000000000009, 0.0},
    {-0.59999999999999976, 1, 0.20000000000000018, 0.0},
    {-0.39999999999999969, 1, 0.30000000000000004, 0.0},
    {-0.19999999999999971, 1, 0.40000000000000013, 0.0},
    {-1.8569000893614806e-16, 1, 0.50000000000000000, 0.0},
    {0.20000000000000034, 1, 0.60000000000000009, 0.0},
    {0.40000000000000047, 1, 0.70000000000000018, 0.0},
    {0.60000000000000020, 1, 0.80000000000000004, 0.0},
    {0.80000000000000027, 1, 0.90000000000000013, 0.0},
    {1.0000000000000000, 1, 1.0000000000000000, 0.0},
};

const double tolerance_0002 = 2.5000000000000020e-13;

const chebyshev_polynomial_v_fixture<double> fixture_0003[21] = {
    {-11.000000000000000, 5, -1.0000000000000000, 0.0},
    {-2.7452799999999993, 5, -0.90000000000000002, 0.0},
    {1.2246400000000000, 5, -0.80000000000000004, 0.0},
    {2.4361600000000010, 5, -0.69999999999999996, 0.0},
    {2.0700799999999995, 5, -0.59999999999999998, 0.0},
    {1.0000000000000016, 5, -0.50000000000000000, 0.0},
    {-0.16928000000000160, 5, -0.39999999999999991, 0.0},
    {-1.0633600000000012, 5, -0.29999999999999993, 0.0},
    {-1.4998399999999998, 5, -0.19999999999999996, 0.0},
    {-1.4499199999999999, 5, -0.099999999999999978, 0.0},
    {-0.99999999999999878, 5, 0.0000000000000000, 0.0},
    {-0.31327999999999995, 5, 0.10000000000000009, 0.0},
    {0.40864000000000095, 5, 0.20000000000000018, 0.0},
    {0.96416000000000057, 5, 0.30000000000000004, 0.0},
    {1.1900800000000000, 5, 0.40000000000000013, 0.0},
    {1.0000000000000002, 5, 0.50000000000000000, 0.0},
    {0.42271999999999937, 5, 0.60000000000000009, 0.0},
    {-0.35936000000000212, 5, 0.70000000000000018, 0.0},
    {-0.97184000000000026, 5, 0.80000000000000004, 0.0},
    {-0.80991999999999909, 5, 0.90000000000000013, 0.0},
    {1.0000000000000000, 5, 1.0000000000000000, 0.0},
};

const double tolerance_0003 = 2.5000000000000020e-13;

const chebyshev_polynomial_v_fixture<double> fixture_0004[21] = {
    {17.000000000000000, 8, -1.0000000000000000, 0.0},
    {-2.8540390400000053, 8, -0.90000000000000002, 0.0},
    {-2.2978534399999999, 8, -0.80000000000000004, 0.0},
    {1.1870489600000054, 8, -0.69999999999999996, 0.0},
    {2.2351897599999995, 8, -0.59999999999999998, 0.0},
    {1.0000000000000011, 8, -0.50000000000000000, 0.0},
    {-0.75960063999999827, 8, -0.39999999999999991, 0.0},
    {-1.6443622399999998, 8, -0.29999999999999993, 0.0},
    {-1.2638182400000002, 8, -0.19999999999999996, 0.0},
    {-0.098352639999998562, 8, -0.099999999999999978, 0.0},
    {0.99999999999999956, 8, 0.0000000000000000, 0.0},
    {1.3454617599999998, 8, 0.10000000000000009, 0.0},
    {0.77578495999999864, 8, 0.20000000000000018, 0.0},
    {-0.28722944000000028, 8, 0.30000000000000004, 0.0},
    {-1.0868710400000001, 8, 0.40000000000000013, 0.0},
    {-1.0000000000000002, 8, 0.50000000000000000, 0.0},
    {-0.031331839999998633, 8, 0.60000000000000009, 0.0},
    {0.96322816000000100, 8, 0.70000000000000018, 0.0},
    {0.72417535999999916, 8, 0.80000000000000004, 0.0},
    {-0.78988544000000172, 8, 0.90000000000000013, 0.0},
    {1.0000000000000000, 8, 1.0000000000000000, 0.0},
};

const double tolerance_0004 = 1.0000000000000008e-12;

const chebyshev_polynomial_v_fixture<double> fixture_0005[21] = {
    {21.000000000000000, 10, -1.0000000000000000, 0.0},
    {-4.4709124095999995, 10, -0.90000000000000002, 0.0},
    {1.4422260735999999, 10, -0.80000000000000004, 0.0},
    {2.2687420415999946, 10, -0.69999999999999996, 0.0},
    {-0.68601026560000600, 10, -0.59999999999999998, 0.0},
    {-2.0000000000000004, 10, -0.50000000000000000, 0.0},
    {-0.70076712959999810, 10, -0.39999999999999991, 0.0},
    {1.1243380735999988, 10, -0.29999999999999993, 0.0},
    {1.5350895616000000, 10, -0.19999999999999996, 0.0},
    {0.39238717439999826, 10, -0.099999999999999978, 0.0},
    {-0.99999999999999967, 10, 0.0000000000000000, 0.0},
    {-1.3008490495999998, 10, 0.10000000000000009, 0.0},
    {-0.30930032639999805, 10, 0.20000000000000018, 0.0},
    {0.92616028160000041, 10, 0.30000000000000004, 0.0},
    {1.1036806143999991, 10, 0.40000000000000013, 0.0},
    {1.5562250874041784e-15, 10, 0.50000000000000000, 0.0},
    {-1.0641181696000006, 10, 0.60000000000000009, 0.0},
    {-0.51782512639999745, 10, 0.70000000000000018, 0.0},
    {0.93808220160000066, 10, 0.80000000000000004, 0.0},
    {0.023998054399996725, 10, 0.90000000000000013, 0.0},
    {1.0000000000000000, 10, 1.0000000000000000, 0.0},
};

const double tolerance_0005 = 1.0000000000000008e-12;

const chebyshev_polynomial_v_fixture<double> fixture_0006[21] = {
    {41.000000000000000, 20, -1.0000000000000000, 0.0},
    {0.79504869890740026, 20, -0.90000000000000002, 0.0},
    {1.8512711080640354, 20, -0.80000000000000004, 0.0},
    {-1.4530226431858810, 20, -0.69999999999999996, 0.0},
    {0.35623761485477434, 20, -0.59999999999999998, 0.0},
    {1.0000000000000118, 20, -0.50000000000000000, 0.0},
    {-1.7881475926508603, 20, -0.39999999999999991, 0.0},
    {1.2386077195392649, 20, -0.29999999999999993, 0.0},
    {0.31543552675929504, 20, -0.19999999999999996, 0.0},
    {-1.4229092060125594, 20, -0.099999999999999978, 0.0},
    {1.0000000000000040, 20, 0.0000000000000000, 0.0},
    {0.40203624022562057, 20, 0.10000000000000009, 0.0},
    {-1.2650429316715133, 20, 0.20000000000000018, 0.0},
    {0.84402681417869452, 20, 0.30000000000000004, 0.0},
    {0.24130140035435174, 20, 0.40000000000000013, 0.0},
    {-1.0000000000000020, 20, 0.50000000000000000, 0.0},
    {1.1037543614594003, 20, 0.60000000000000009, 0.0},
    {-0.89660062573515964, 20, 0.70000000000000018, 0.0},
    {0.85458211259118944, 20, 0.80000000000000004, 0.0},
    {-1.0096350973538484, 20, 0.90000000000000013, 0.0},
    {1.0000000000000000, 20, 1.0000000000000000, 0.0},
};

const double tolerance_0006 = 2.5000000000000015e-12;

const chebyshev_polynomial_v_fixture<double> fixture_0007[21] = {
    {81.000000000000000, 40, -1.0000000000000000, 0.0},
    {-2.4619369906291761, 40, -0.90000000000000002, 0.0},
    {2.5331546572256212, 40, -0.80000000000000004, 0.0},
    {1.8481101593325424, 40, -0.69999999999999996, 0.0},
    {-0.32011979092607334, 40, -0.59999999999999998, 0.0},
    {-2.0000000000000004, 40, -0.50000000000000000, 0.0},
    {0.31440756245613788, 40, -0.39999999999999991, 0.0},
    {1.4329479238333889, 40, -0.29999999999999993, 0.0},
    {-1.3992477229963782, 40, -0.19999999999999996, 0.0},
    {0.19293637359526891, 40, -0.099999999999999978, 0.0},
    {1.0000000000000051, 40, 0.0000000000000000, 0.0},
    {-1.3370585083307145, 40, 0.10000000000000009, 0.0},
    {0.60116875594652797, 40, 0.20000000000000018, 0.0},
    {0.65788833124633406, 40, 0.30000000000000004, 0.0},
    {-1.1773725987499899, 40, 0.40000000000000013, 0.0},
    {4.2444451667225723e-15, 40, 0.50000000000000000, 0.0},
    {1.1065174331497698, 40, 0.60000000000000009, 0.0},
    {0.75745186284309296, 40, 0.70000000000000018, 0.0},
    {0.63097169179115309, 40, 0.80000000000000004, 0.0},
    {0.85651884958431201, 40, 0.90000000000000013, 0.0},
    {1.0000000000000000, 40, 1.0000000000000000, 0.0},
};

const double tolerance_0007 = 5.0000000000000029e-12;

const chebyshev_polynomial_v_fixture<double> fixture_0008[21] = {
    {201.00000000000000, 100, -1.0000000000000000, 0.0},
    {4.3595126348515896, 100, -0.90000000000000002, 0.0},
    {3.0483748605943672, 100, -0.80000000000000004, 0.0},
    {-2.5434335568364665, 100, -0.69999999999999996, 0.0},
    {-1.9447259865843127, 100, -0.59999999999999998, 0.0},
    {-2.0000000000000004, 100, -0.50000000000000000, 0.0},
    {-0.48462380179611853, 100, -0.39999999999999991, 0.0},
    {1.6902413146121975, 100, -0.29999999999999993, 0.0},
    {-0.89475669222156173, 100, -0.19999999999999996, 0.0},
    {-0.21296288072518260, 100, -0.099999999999999978, 0.0},
    {1.0000000000000016, 100, 0.0000000000000000, 0.0},
    {-1.3345690929659351, 100, 0.10000000000000009, 0.0},
    {1.0643966872442043, 100, 0.20000000000000018, 0.0},
    {-0.011059589108422351, 100, 0.30000000000000004, 0.0},
    {-1.1523528299091910, 100, 0.40000000000000013, 0.0},
    {9.6208853253593594e-15, 100, 0.50000000000000000, 0.0},
    {0.55182443700499828, 100, 0.60000000000000009, 0.0},
    {-0.18674254467756560, 100, 0.70000000000000018, 0.0},
    {-0.28035903752475322, 100, 0.80000000000000004, 0.0},
    {0.22880117622187437, 100, 0.90000000000000013, 0.0},
    {1.0000000000000000, 100, 1.0000000000000000, 0.0},
};

const double tolerance_0008 = 1.0000000000000006e-10;

template<typename T1, unsigned int T2>
void
test(const chebyshev_polynomial_v_fixture<T1>(&fixtures)[T2], T1 tolerance) {
  const T1 epsilon = std::numeric_limits<T1>::epsilon();

  T1 maximum_absolute_difference = T1(-1);
  T1 maximum_absolute_fraction = T1(-1);

  auto error = 0;

  for (auto fixture: fixtures) {
    const T1 g = aten::native::special_functions::chebyshev_polynomial_v(fixture.n, fixture.x);

    if (std::isnan(g) && !error) {
      error = 1;
    }

    if (!std::isnan(g)) {
      const T1 f = fixture.f0;

      const auto difference = g - f;

      const auto absolute_difference = std::abs(difference);

      if (absolute_difference > maximum_absolute_difference) {
        maximum_absolute_difference = absolute_difference;
      }

      const auto abs_f = std::abs(f);
      const auto abs_g = std::abs(g);

      if (abs_f > T1(10) * epsilon && abs_g > T1(10) * epsilon) {
        const auto fraction = difference / f;

        const auto absolute_fraction = std::abs(fraction);

        if (absolute_fraction > maximum_absolute_fraction) {
          maximum_absolute_fraction = absolute_fraction;
        }
      }
    }
  }

  EXPECT_TRUE(!error && maximum_absolute_fraction < tolerance);
}

TEST(ChebyshevPolynomialVTest, GSL) {
  test(fixture_0001, tolerance_0001);
  test(fixture_0002, tolerance_0002);
  test(fixture_0003, tolerance_0003);
  test(fixture_0004, tolerance_0004);
  test(fixture_0005, tolerance_0005);
  test(fixture_0006, tolerance_0006);
  test(fixture_0007, tolerance_0007);
  test(fixture_0008, tolerance_0008);
}