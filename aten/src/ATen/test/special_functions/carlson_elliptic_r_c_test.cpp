#include <gtest/gtest.h>
#include <ATen/native/special_functions/carlson_elliptic_r_c.h>

template<typename T1>
struct carlson_elliptic_r_c_fixture {
  T1 f0;
  T1 x;
  T1 y;
  T1 f;
};

const carlson_elliptic_r_c_fixture<double> fixture_0001[10] = {
    {1.4142135623730951, 0.50000000000000000, 0.50000000000000000, 0.0},
    {1.1107207345395915, 0.50000000000000000, 1.0000000000000000, 0.0},
    {0.95531661812450930, 0.50000000000000000, 1.5000000000000000, 0.0},
    {0.85503322010790939, 0.50000000000000000, 2.0000000000000000, 0.0},
    {0.78287236613419264, 0.50000000000000000, 2.5000000000000000, 0.0},
    {0.72748955981916175, 0.50000000000000000, 3.0000000000000000, 0.0},
    {0.68312063073973339, 0.50000000000000000, 3.5000000000000000, 0.0},
    {0.64646710153810161, 0.50000000000000000, 4.0000000000000000, 0.0},
    {0.61547970867038737, 0.50000000000000000, 4.5000000000000000, 0.0},
    {0.58880582378346313, 0.50000000000000000, 5.0000000000000000, 0.0},
};

const double tolerance_0001 = 2.5000000000000020e-13;

const carlson_elliptic_r_c_fixture<double> fixture_0002[10] = {
    {1.2464504802804610, 1.0000000000000000, 0.50000000000000000, 0.0},
    {1.0000000000000000, 1.0000000000000000, 1.0000000000000000, 0.0},
    {0.87041975136710314, 1.0000000000000000, 1.5000000000000000, 0.0},
    {0.78539816339744828, 1.0000000000000000, 2.0000000000000000, 0.0},
    {0.72347894201494256, 1.0000000000000000, 2.5000000000000000, 0.0},
    {0.67551085885604001, 1.0000000000000000, 3.0000000000000000, 0.0},
    {0.63679018330139714, 1.0000000000000000, 3.5000000000000000, 0.0},
    {0.60459978807807258, 1.0000000000000000, 4.0000000000000000, 0.0},
    {0.57723812571556010, 1.0000000000000000, 4.5000000000000000, 0.0},
    {0.55357435889704520, 1.0000000000000000, 5.0000000000000000, 0.0},
};

const double tolerance_0002 = 2.5000000000000020e-13;

const carlson_elliptic_r_c_fixture<double> fixture_0003[10] = {
    {1.1462158347805889, 1.5000000000000000, 0.50000000000000000, 0.0},
    {0.93122985945271219, 1.5000000000000000, 1.0000000000000000, 0.0},
    {0.81649658092772603, 1.5000000000000000, 1.5000000000000000, 0.0},
    {0.74048048969306102, 1.5000000000000000, 2.0000000000000000, 0.0},
    {0.68471920300228295, 1.5000000000000000, 2.5000000000000000, 0.0},
    {0.64127491508093204, 1.5000000000000000, 3.0000000000000000, 0.0},
    {0.60604138628959059, 1.5000000000000000, 3.5000000000000000, 0.0},
    {0.57663392588994922, 1.5000000000000000, 4.0000000000000000, 0.0},
    {0.55155230663550836, 1.5000000000000000, 4.5000000000000000, 0.0},
    {0.52979548043855929, 1.5000000000000000, 5.0000000000000000, 0.0},
};

const double tolerance_0003 = 2.5000000000000020e-13;

const carlson_elliptic_r_c_fixture<double> fixture_0004[10] = {
    {1.0752916200648814, 2.0000000000000000, 0.50000000000000000, 0.0},
    {0.88137358701954305, 2.0000000000000000, 1.0000000000000000, 0.0},
    {0.77683619921209324, 2.0000000000000000, 1.5000000000000000, 0.0},
    {0.70710678118654757, 2.0000000000000000, 2.0000000000000000, 0.0},
    {0.65569673681079788, 2.0000000000000000, 2.5000000000000000, 0.0},
    {0.61547970867038737, 2.0000000000000000, 3.0000000000000000, 0.0},
    {0.58275351513316587, 2.0000000000000000, 3.5000000000000000, 0.0},
    {0.55536036726979576, 2.0000000000000000, 4.0000000000000000, 0.0},
    {0.53193853352089682, 2.0000000000000000, 4.5000000000000000, 0.0},
    {0.51157686594443486, 2.0000000000000000, 5.0000000000000000, 0.0},
};

const double tolerance_0004 = 2.5000000000000020e-13;

const carlson_elliptic_r_c_fixture<double> fixture_0005[10] = {
    {1.0208044340604006, 2.5000000000000000, 0.50000000000000000, 0.0},
    {0.84239465585637696, 2.5000000000000000, 1.0000000000000000, 0.0},
    {0.74549815449740420, 2.5000000000000000, 1.5000000000000000, 0.0},
    {0.68053628937360044, 2.5000000000000000, 2.0000000000000000, 0.0},
    {0.63245553203367588, 2.5000000000000000, 2.5000000000000000, 0.0},
    {0.59472536040213786, 2.5000000000000000, 3.0000000000000000, 0.0},
    {0.56394264136062888, 2.5000000000000000, 3.5000000000000000, 0.0},
    {0.53811863288520567, 2.5000000000000000, 4.0000000000000000, 0.0},
    {0.51599537413745367, 2.5000000000000000, 4.5000000000000000, 0.0},
    {0.49672941328980508, 2.5000000000000000, 5.0000000000000000, 0.0},
};

const double tolerance_0005 = 2.5000000000000020e-13;

const carlson_elliptic_r_c_fixture<double> fixture_0006[10] = {
    {0.97681805230225327, 3.0000000000000000, 0.50000000000000000, 0.0},
    {0.81049698947675375, 3.0000000000000000, 1.0000000000000000, 0.0},
    {0.71963852032146247, 3.0000000000000000, 1.5000000000000000, 0.0},
    {0.65847894846240840, 3.0000000000000000, 2.0000000000000000, 0.0},
    {0.61307199249007838, 3.0000000000000000, 2.5000000000000000, 0.0},
    {0.57735026918962573, 3.0000000000000000, 3.0000000000000000, 0.0},
    {0.54814449099863127, 3.0000000000000000, 3.5000000000000000, 0.0},
    {0.52359877559829893, 3.0000000000000000, 4.0000000000000000, 0.0},
    {0.50253707775976419, 3.0000000000000000, 4.5000000000000000, 0.0},
    {0.48416959165156248, 3.0000000000000000, 5.0000000000000000, 0.0},
};

const double tolerance_0006 = 2.5000000000000020e-13;

const carlson_elliptic_r_c_fixture<double> fixture_0007[10] = {
    {0.94010347172525099, 3.5000000000000000, 0.50000000000000000, 0.0},
    {0.78357721761742349, 3.5000000000000000, 1.0000000000000000, 0.0},
    {0.69766475679190154, 3.5000000000000000, 1.5000000000000000, 0.0},
    {0.63964310999407181, 3.5000000000000000, 2.0000000000000000, 0.0},
    {0.59645536549652445, 3.5000000000000000, 2.5000000000000000, 0.0},
    {0.56240831115298973, 3.5000000000000000, 3.0000000000000000, 0.0},
    {0.53452248382484879, 3.5000000000000000, 3.5000000000000000, 0.0},
    {0.51105028762462490, 3.5000000000000000, 4.0000000000000000, 0.0},
    {0.49088267828931137, 3.5000000000000000, 4.5000000000000000, 0.0},
    {0.47327386617679940, 3.5000000000000000, 5.0000000000000000, 0.0},
};

const double tolerance_0007 = 2.5000000000000020e-13;

const carlson_elliptic_r_c_fixture<double> fixture_0008[10] = {
    {0.90871078312300901, 4.0000000000000000, 0.50000000000000000, 0.0},
    {0.76034599630094635, 4.0000000000000000, 1.0000000000000000, 0.0},
    {0.67859209091559158, 4.0000000000000000, 1.5000000000000000, 0.0},
    {0.62322524014023051, 4.0000000000000000, 2.0000000000000000, 0.0},
    {0.58192403020680317, 4.0000000000000000, 2.5000000000000000, 0.0},
    {0.54930614433405489, 4.0000000000000000, 3.0000000000000000, 0.0},
    {0.52255045738047989, 4.0000000000000000, 3.5000000000000000, 0.0},
    {0.50000000000000000, 4.0000000000000000, 4.0000000000000000, 0.0},
    {0.48060196634497671, 4.0000000000000000, 4.5000000000000000, 0.0},
    {0.46364760900080609, 4.0000000000000000, 5.0000000000000000, 0.0},
};

const double tolerance_0008 = 2.5000000000000020e-13;

const carlson_elliptic_r_c_fixture<double> fixture_0009[10] = {
    {0.88137358701954305, 4.5000000000000000, 0.50000000000000000, 0.0},
    {0.73995534521687278, 4.5000000000000000, 1.0000000000000000, 0.0},
    {0.66176802075998453, 4.5000000000000000, 1.5000000000000000, 0.0},
    {0.60869016167793533, 4.5000000000000000, 2.0000000000000000, 0.0},
    {0.56902223089043658, 4.5000000000000000, 2.5000000000000000, 0.0},
    {0.53764581003244072, 4.5000000000000000, 3.0000000000000000, 0.0},
    {0.51187461509367371, 4.5000000000000000, 3.5000000000000000, 0.0},
    {0.49012907173427361, 4.5000000000000000, 4.0000000000000000, 0.0},
    {0.47140452079103168, 4.5000000000000000, 4.5000000000000000, 0.0},
    {0.45502399772879365, 4.5000000000000000, 5.0000000000000000, 0.0},
};

const double tolerance_0009 = 2.5000000000000020e-13;

const carlson_elliptic_r_c_fixture<double> fixture_0010[10] = {
    {0.85722388169844077, 5.0000000000000000, 0.50000000000000000, 0.0},
    {0.72181773758940515, 5.0000000000000000, 1.0000000000000000, 0.0},
    {0.64673752632340953, 5.0000000000000000, 1.5000000000000000, 0.0},
    {0.59566297359135212, 5.0000000000000000, 2.0000000000000000, 0.0},
    {0.55742960089887439, 5.0000000000000000, 2.5000000000000000, 0.0},
    {0.52714680040717099, 5.0000000000000000, 3.0000000000000000, 0.0},
    {0.50224501365509522, 5.0000000000000000, 3.5000000000000000, 0.0},
    {0.48121182505960347, 5.0000000000000000, 4.0000000000000000, 0.0},
    {0.46308444346663846, 5.0000000000000000, 4.5000000000000000, 0.0},
    {0.44721359549995793, 5.0000000000000000, 5.0000000000000000, 0.0},
};

const double tolerance_0010 = 2.5000000000000020e-13;

template<typename T1, unsigned int T2>
void
test(const carlson_elliptic_r_c_fixture<T1>(&fixtures)[T2], T1 tolerance) {
  const T1 epsilon = std::numeric_limits<T1>::epsilon();

  T1 maximum_absolute_difference = T1(-1);
  T1 maximum_absolute_fraction = T1(-1);

  auto error = 0;

  for (auto fixture: fixtures) {
    const T1 g = aten::native::special_functions::carlson_elliptic_r_c(fixture.x, fixture.y);

    if (std::isnan(g) && !error) {
      error = 1;
    }

    if (!std::isnan(g)) {
      const T1 f = fixture.f0;

      const auto difference = g - f;

      const auto absolute_difference = std::abs(difference);

      if (absolute_difference > maximum_absolute_difference) {
        maximum_absolute_difference = absolute_difference;
      }

      const auto abs_f = std::abs(f);
      const auto abs_g = std::abs(g);

      if (abs_f > T1(10) * epsilon && abs_g > T1(10) * epsilon) {
        const auto fraction = difference / f;

        const auto absolute_fraction = std::abs(fraction);

        if (absolute_fraction > maximum_absolute_fraction) {
          maximum_absolute_fraction = absolute_fraction;
        }
      }
    }
  }

  EXPECT_TRUE(!error && maximum_absolute_fraction < tolerance);
}

TEST(CarlsonEllipticRCTest, GSL) {
  test(fixture_0001, tolerance_0001);
  test(fixture_0002, tolerance_0002);
  test(fixture_0003, tolerance_0003);
  test(fixture_0004, tolerance_0004);
  test(fixture_0005, tolerance_0005);
  test(fixture_0006, tolerance_0006);
  test(fixture_0007, tolerance_0007);
  test(fixture_0008, tolerance_0008);
  test(fixture_0009, tolerance_0009);
  test(fixture_0010, tolerance_0010);
}
