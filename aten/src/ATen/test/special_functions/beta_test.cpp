#include <gtest/gtest.h>
#include <ATen/native/special_functions/beta.h>

template<typename T1>
struct beta_fixture {
  T1 f0;
  T1 x;
  T1 y;
  T1 f;
};

const beta_fixture<double> fixture_0001[10] = {
    {1.0825088224469029e-06, 10.000000000000000, 10.000000000000000, 0.0},
    {4.9925087406346778e-09, 10.000000000000000, 20.000000000000000, 0.0},
    {1.5729567312509485e-10, 10.000000000000000, 30.000000000000000, 0.0},
    {1.2168673582561288e-11, 10.000000000000000, 40.000000000000000, 0.0},
    {1.5916380099863291e-12, 10.000000000000000, 50.000000000000000, 0.0},
    {2.9408957938463963e-13, 10.000000000000000, 60.000000000000000, 0.0},
    {6.9411637980691676e-14, 10.000000000000000, 70.000000000000000, 0.0},
    {1.9665612972502651e-14, 10.000000000000000, 80.000000000000000, 0.0},
    {6.4187824828154399e-15, 10.000000000000000, 90.000000000000000, 0.0},
    {2.3455339739604842e-15, 10.000000000000000, 100.00000000000000, 0.0},
};

const double tolerance_0001 = 2.5000000000000015e-12;

const beta_fixture<double> fixture_0002[10] = {
    {4.9925087406346778e-09, 20.000000000000000, 10.000000000000000, 0.0},
    {7.2544445519248436e-13, 20.000000000000000, 20.000000000000000, 0.0},
    {1.7681885473062028e-15, 20.000000000000000, 30.000000000000000, 0.0},
    {1.7891885039182335e-17, 20.000000000000000, 40.000000000000000, 0.0},
    {4.3240677875623635e-19, 20.000000000000000, 50.000000000000000, 0.0},
    {1.8857342309689050e-20, 20.000000000000000, 60.000000000000000, 0.0},
    {1.2609804003539998e-21, 20.000000000000000, 70.000000000000000, 0.0},
    {1.1660809542079041e-22, 20.000000000000000, 80.000000000000000, 0.0},
    {1.3907944279729071e-23, 20.000000000000000, 90.000000000000000, 0.0},
    {2.0365059099917614e-24, 20.000000000000000, 100.00000000000000, 0.0},
};

const double tolerance_0002 = 2.5000000000000020e-13;

const beta_fixture<double> fixture_0003[10] = {
    {1.5729567312509485e-10, 30.000000000000000, 10.000000000000000, 0.0},
    {1.7681885473062028e-15, 30.000000000000000, 20.000000000000000, 0.0},
    {5.6370779640482451e-19, 30.000000000000000, 30.000000000000000, 0.0},
    {1.0539424603796547e-21, 30.000000000000000, 40.000000000000000, 0.0},
    {6.0118197777273836e-24, 30.000000000000000, 50.000000000000000, 0.0},
    {7.4279528553260165e-26, 30.000000000000000, 60.000000000000000, 0.0},
    {1.6212207780604767e-27, 30.000000000000000, 70.000000000000000, 0.0},
    {5.4783729715317616e-29, 30.000000000000000, 80.000000000000000, 0.0},
    {2.6183005659681346e-30, 30.000000000000000, 90.000000000000000, 0.0},
    {1.6587948222122229e-31, 30.000000000000000, 100.00000000000000, 0.0},
};

const double tolerance_0003 = 2.5000000000000020e-13;

const beta_fixture<double> fixture_0004[10] = {
    {1.2168673582561288e-11, 40.000000000000000, 10.000000000000000, 0.0},
    {1.7891885039182335e-17, 40.000000000000000, 20.000000000000000, 0.0},
    {1.0539424603796547e-21, 40.000000000000000, 30.000000000000000, 0.0},
    {4.6508509140090659e-25, 40.000000000000000, 40.000000000000000, 0.0},
    {7.5161712118557719e-28, 40.000000000000000, 50.000000000000000, 0.0},
    {3.0311331979886071e-30, 40.000000000000000, 60.000000000000000, 0.0},
    {2.4175035070466313e-32, 40.000000000000000, 70.000000000000000, 0.0},
    {3.2734839142758369e-34, 40.000000000000000, 80.000000000000000, 0.0},
    {6.7690629601315579e-36, 40.000000000000000, 90.000000000000000, 0.0},
    {1.9797337118812366e-37, 40.000000000000000, 100.00000000000000, 0.0},
};

const double tolerance_0004 = 2.5000000000000020e-13;

const beta_fixture<double> fixture_0005[10] = {
    {1.5916380099863291e-12, 50.000000000000000, 10.000000000000000, 0.0},
    {4.3240677875623635e-19, 50.000000000000000, 20.000000000000000, 0.0},
    {6.0118197777273836e-24, 50.000000000000000, 30.000000000000000, 0.0},
    {7.5161712118557719e-28, 50.000000000000000, 40.000000000000000, 0.0},
    {3.9646612085674138e-31, 50.000000000000000, 50.000000000000000, 0.0},
    {5.8425643906418403e-34, 50.000000000000000, 60.000000000000000, 0.0},
    {1.8672362180783552e-36, 50.000000000000000, 70.000000000000000, 0.0},
    {1.0939382296458962e-38, 50.000000000000000, 80.000000000000000, 0.0},
    {1.0442781609881063e-40, 50.000000000000000, 90.000000000000000, 0.0},
    {1.4904121110954370e-42, 50.000000000000000, 100.00000000000000, 0.0},
};

const double tolerance_0005 = 2.5000000000000015e-12;

const beta_fixture<double> fixture_0006[10] = {
    {2.9408957938463963e-13, 60.000000000000000, 10.000000000000000, 0.0},
    {1.8857342309689050e-20, 60.000000000000000, 20.000000000000000, 0.0},
    {7.4279528553260165e-26, 60.000000000000000, 30.000000000000000, 0.0},
    {3.0311331979886071e-30, 60.000000000000000, 40.000000000000000, 0.0},
    {5.8425643906418403e-34, 60.000000000000000, 50.000000000000000, 0.0},
    {3.4501231469782229e-37, 60.000000000000000, 60.000000000000000, 0.0},
    {4.7706855386086599e-40, 60.000000000000000, 70.000000000000000, 0.0},
    {1.2902663809722593e-42, 60.000000000000000, 80.000000000000000, 0.0},
    {6.0105571058570508e-45, 60.000000000000000, 90.000000000000000, 0.0},
    {4.3922898898347209e-47, 60.000000000000000, 100.00000000000000, 0.0},
};

const double tolerance_0006 = 2.5000000000000020e-13;

const beta_fixture<double> fixture_0007[10] = {
    {6.9411637980691676e-14, 70.000000000000000, 10.000000000000000, 0.0},
    {1.2609804003539998e-21, 70.000000000000000, 20.000000000000000, 0.0},
    {1.6212207780604767e-27, 70.000000000000000, 30.000000000000000, 0.0},
    {2.4175035070466313e-32, 70.000000000000000, 40.000000000000000, 0.0},
    {1.8672362180783552e-36, 70.000000000000000, 50.000000000000000, 0.0},
    {4.7706855386086599e-40, 70.000000000000000, 60.000000000000000, 0.0},
    {3.0453137143486369e-43, 70.000000000000000, 70.000000000000000, 0.0},
    {4.0192274082013779e-46, 70.000000000000000, 80.000000000000000, 0.0},
    {9.5865870063501807e-49, 70.000000000000000, 90.000000000000000, 0.0},
    {3.7409127305819802e-51, 70.000000000000000, 100.00000000000000, 0.0},
};

const double tolerance_0007 = 2.5000000000000020e-13;

const beta_fixture<double> fixture_0008[10] = {
    {1.9665612972502651e-14, 80.000000000000000, 10.000000000000000, 0.0},
    {1.1660809542079041e-22, 80.000000000000000, 20.000000000000000, 0.0},
    {5.4783729715317616e-29, 80.000000000000000, 30.000000000000000, 0.0},
    {3.2734839142758369e-34, 80.000000000000000, 40.000000000000000, 0.0},
    {1.0939382296458962e-38, 80.000000000000000, 50.000000000000000, 0.0},
    {1.2902663809722593e-42, 80.000000000000000, 60.000000000000000, 0.0},
    {4.0192274082013779e-46, 80.000000000000000, 70.000000000000000, 0.0},
    {2.7160590828669411e-49, 80.000000000000000, 80.000000000000000, 0.0},
    {3.4593773902125368e-52, 80.000000000000000, 90.000000000000000, 0.0},
    {7.4807039968503468e-55, 80.000000000000000, 100.00000000000000, 0.0},
};

const double tolerance_0008 = 2.5000000000000020e-13;

const beta_fixture<double> fixture_0009[10] = {
    {6.4187824828154399e-15, 90.000000000000000, 10.000000000000000, 0.0},
    {1.3907944279729071e-23, 90.000000000000000, 20.000000000000000, 0.0},
    {2.6183005659681346e-30, 90.000000000000000, 30.000000000000000, 0.0},
    {6.7690629601315579e-36, 90.000000000000000, 40.000000000000000, 0.0},
    {1.0442781609881063e-40, 90.000000000000000, 50.000000000000000, 0.0},
    {6.0105571058570508e-45, 90.000000000000000, 60.000000000000000, 0.0},
    {9.5865870063501807e-49, 90.000000000000000, 70.000000000000000, 0.0},
    {3.4593773902125368e-52, 90.000000000000000, 80.000000000000000, 0.0},
    {2.4416737907558032e-55, 90.000000000000000, 90.000000000000000, 0.0},
    {3.0238531916564246e-58, 90.000000000000000, 100.00000000000000, 0.0},
};

const double tolerance_0009 = 2.5000000000000020e-13;

const beta_fixture<double> fixture_0010[10] = {
    {2.3455339739604842e-15, 100.00000000000000, 10.000000000000000, 0.0},
    {2.0365059099917614e-24, 100.00000000000000, 20.000000000000000, 0.0},
    {1.6587948222122229e-31, 100.00000000000000, 30.000000000000000, 0.0},
    {1.9797337118812366e-37, 100.00000000000000, 40.000000000000000, 0.0},
    {1.4904121110954370e-42, 100.00000000000000, 50.000000000000000, 0.0},
    {4.3922898898347209e-47, 100.00000000000000, 60.000000000000000, 0.0},
    {3.7409127305819802e-51, 100.00000000000000, 70.000000000000000, 0.0},
    {7.4807039968503468e-55, 100.00000000000000, 80.000000000000000, 0.0},
    {3.0238531916564246e-58, 100.00000000000000, 90.000000000000000, 0.0},
    {2.2087606931991853e-61, 100.00000000000000, 100.00000000000000, 0.0},
};

const double tolerance_0010 = 5.0000000000000039e-13;

template<typename T1, unsigned int T2>
void
test(const beta_fixture<T1>(&fixtures)[T2], T1 tolerance) {
  const T1 epsilon = std::numeric_limits<T1>::epsilon();

  T1 maximum_absolute_difference = T1(-1);
  T1 maximum_absolute_fraction = T1(-1);

  auto error = 0;

  for (auto fixture: fixtures) {
    const T1 g = aten::native::special_functions::beta(fixture.x, fixture.y);

    if (std::isnan(g) && !error) {
      error = 1;
    }

    if (!std::isnan(g)) {
      const T1 f = fixture.f0;

      const auto difference = g - f;

      const auto absolute_difference = std::abs(difference);

      if (absolute_difference > maximum_absolute_difference) {
        maximum_absolute_difference = absolute_difference;
      }

      const auto abs_f = std::abs(f);
      const auto abs_g = std::abs(g);

      if (abs_f > T1(10) * epsilon && abs_g > T1(10) * epsilon) {
        const auto fraction = difference / f;

        const auto absolute_fraction = std::abs(fraction);

        if (absolute_fraction > maximum_absolute_fraction) {
          maximum_absolute_fraction = absolute_fraction;
        }
      }
    }
  }

  EXPECT_TRUE(!error && maximum_absolute_fraction < tolerance);
}

TEST(BetaTest, GSL) {
  test(fixture_0001, tolerance_0001);
  test(fixture_0002, tolerance_0002);
  test(fixture_0003, tolerance_0003);
  test(fixture_0004, tolerance_0004);
  test(fixture_0005, tolerance_0005);
  test(fixture_0006, tolerance_0006);
  test(fixture_0007, tolerance_0007);
  test(fixture_0008, tolerance_0008);
  test(fixture_0009, tolerance_0009);
  test(fixture_0010, tolerance_0010);
}
